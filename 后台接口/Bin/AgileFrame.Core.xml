<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AgileFrame.Core</name>
    </assembly>
    <members>
        <member name="T:AgileFrame.NamedPipes.APipeConnection">
            <summary>
            An abstract class, which defines the methods for creating named pipes 
            connections, reading and writing data.
            </summary>
            <remarks>
            This class is inherited by 
            <see cref="T:AgileFrame.NamedPipes.ClientPipeConnection">ClientPipeConnection</see> 
            and <see cref="T:AgileFrame.NamedPipes.ServerPipeConnection">ServerPipeConnection</see> 
            classes, used for client and server applications respectively, which communicate
            using NamesPipes.
            </remarks>
        </member>
        <member name="T:AgileFrame.InterProcessComm.IInterProcessConnection">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IInterProcessConnection.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IInterProcessConnection.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IInterProcessConnection.Read">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IInterProcessConnection.ReadBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IInterProcessConnection.Write(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IInterProcessConnection.WriteBytes(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IInterProcessConnection.GetState">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.InterProcessComm.IInterProcessConnection.NativeHandle">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.APipeConnection.Handle">
            <summary>
            A <see cref="T:AgileFrame.NamedPipes.PipeHandle">PipeHandle</see> object containing
            the native pipe handle.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.APipeConnection.Name">
            <summary>
            The name of the named pipe.
            </summary>
            <remarks>
            This name is used for creating a server pipe and connecting client ones to it.
            </remarks>
        </member>
        <member name="F:AgileFrame.NamedPipes.APipeConnection.disposed">
            <summary>
            Boolean field used by the IDisposable implementation.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.APipeConnection.maxReadBytes">
            <summary>
            The maximum bytes that will be read from the pipe connection.
            </summary>
            <remarks>
            This field could be used if the maximum length of the client message
            is known and we want to implement some security, which prevents the
            server from reading larger messages.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.Read">
            <summary>
            Reads a message from the pipe connection and converts it to a string
            using the UTF8 encoding.
            </summary>
            <remarks>
            See the <see cref="M:AgileFrame.NamedPipes.NamedPipeWrapper.Read(AgileFrame.NamedPipes.PipeHandle,System.Int32)">NamedPipeWrapper.Read</see>
            method for an explanation of the message format.
            </remarks>
            <returns>The UTF8 encoded string representation of the data.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.ReadBytes">
            <summary>
            Reads a message from the pipe connection.
            </summary>
            <remarks>
            See the <see cref="M:AgileFrame.NamedPipes.NamedPipeWrapper.ReadBytes(AgileFrame.NamedPipes.PipeHandle,System.Int32)">NamedPipeWrapper.ReadBytes</see>
            method for an explanation of the message format.
            </remarks>
            <returns>The bytes read from the pipe connection.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.Write(System.String)">
            <summary>
            Writes a string to the pipe connection/
            </summary>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.WriteBytes(System.Byte[])">
            <summary>
            Writes an array of bytes to the pipe connection.
            </summary>
            <param name="bytes">The bytes array.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.Close">
            <summary>
            Closes the pipe connection.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.Connect">
            <summary>
            Connects a pipe connection.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.Dispose">
            <summary>
            Disposes a pipe connection by closing the underlying native handle.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.Dispose(System.Boolean)">
            <summary>
            Disposes a pipe connection by closing the underlying native handle.
            </summary>
            <param name="disposing">A boolean indicating how the method is called.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.CheckIfDisposed">
            <summary>
            Checks if the pipe connection is disposed.
            </summary>
            <remarks>
            This check is done before performing any pipe operations.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.APipeConnection.GetState">
            <summary>
            Gets the pipe connection state from the <see cref="T:AgileFrame.NamedPipes.PipeHandle">PipeHandle</see> 
            object.
            </summary>
            <returns>The pipe connection state.</returns>
        </member>
        <member name="P:AgileFrame.NamedPipes.APipeConnection.NativeHandle">
            <summary>
            Retrieved the operating system native handle for the pipe connection.
            </summary>
        </member>
        <member name="T:AgileFrame.NamedPipes.ClientPipeConnection">
            <summary>
            Used by client applications to communicate with server ones by using named pipes.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.ClientPipeConnection.Server">
            <summary>
            The network name of the server where the server pipe is created.
            </summary>
            <remarks>
            If "." is used as a server name then the pipe is connected to the local machine.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.ClientPipeConnection.Close">
            <summary>
            Closes a client named pipe connection.
            </summary>
            <remarks>
            A client pipe connection is closed by closing the underlying pipe handle.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.ClientPipeConnection.Connect">
            <summary>
            Connects a client pipe to an existing server one.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.ClientPipeConnection.TryConnect">
            <summary>
            Attempts to establish a connection to the a server named pipe. 
            </summary>
            <remarks>
            If the attempt is successful the method creates the 
            <see cref="T:AgileFrame.NamedPipes.PipeHandle">PipeHandle</see> object
            and assigns it to the <see cref="F:AgileFrame.NamedPipes.APipeConnection.Handle">Handle</see>
            field.<br/><br/>
            This method is used when it is not known whether a server pipe already exists.
            </remarks>
            <returns>True if a connection is established.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.ClientPipeConnection.#ctor(System.String)">
            <summary>
            Creates an instance of the ClientPipeConnection assuming that the server pipe
            is created on the same machine.
            </summary>
            <remarks>
            The maximum bytes to read from the client is set to be Int32.MaxValue.
            </remarks>
            <param name="name">The name of the server pipe.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.ClientPipeConnection.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the ClientPipeConnection specifying the network name
            of the server.
            </summary>
            <remarks>
            The maximum bytes to read from the client is set to be Int32.MaxValue.
            </remarks>
            <param name="name">The name of the server pipe.</param>
            <param name="server">The network name of the machine, where the server pipe is created.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.ClientPipeConnection.Finalize">
            <summary>
            Object destructor.
            </summary>
        </member>
        <member name="T:AgileFrame.NamedPipes.NamedPipeIOException">
            <summary>
            This exception is thrown by named pipes communication methods.
            </summary>
        </member>
        <member name="T:AgileFrame.InterProcessComm.InterProcessIOException">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessIOException.IsServerAvailable">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessIOException.ErrorCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.InterProcessComm.InterProcessIOException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:AgileFrame.InterProcessComm.InterProcessIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeIOException.#ctor(System.String)">
            <summary>
            Creates a NamedPipeIOException instance.
            </summary>
            <param name="text">The error message text.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeIOException.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a NamedPipeIOException instance.
            </summary>
            <param name="text">The error message text.</param>
            <param name="errorCode">The native error code.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeIOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a NamedPipeIOException instance.
            </summary>
            <param name="info">The serialization information.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:AgileFrame.NamedPipes.NamedPipeNative">
            <summary>
            This utility class exposes kernel32.dll methods for named pipes communication.
            </summary>
            <remarks>
            Use the following links for complete information about the exposed methods:
            <list type="bullet">
            <item>
            <description><a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ipc/base/pipe_functions.asp" target="_blank">Named Pipe Functions</a></description>
            </item>
            <item>
            <description><a href="http://msdn.microsoft.com/library/en-us/fileio/base/file_management_functions.asp" target="_blank">File Management Functions</a></description>
            </item>
            <item>
            <description><a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/handle_and_object_functions.asp" target="_blank">Handle and Object Functions</a></description>
            </item>
            <item>
            <description><a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/debug/base/system_error_codes.asp" target="_blank">System Error Codes</a></description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_ACCESS_OUTBOUND">
            <summary>
            Outbound pipe access.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_ACCESS_DUPLEX">
            <summary>
            Duplex pipe access.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_ACCESS_INBOUND">
            <summary>
            Inbound pipe access.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_WAIT">
            <summary>
            Pipe blocking mode.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_NOWAIT">
            <summary>
            Pipe non-blocking mode.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_READMODE_BYTE">
            <summary>
            Pipe read mode of type Byte.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_READMODE_MESSAGE">
            <summary>
            Pipe read mode of type Message.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_TYPE_BYTE">
            <summary>
            Byte pipe type.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_TYPE_MESSAGE">
            <summary>
            Message pipe type.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_CLIENT_END">
            <summary>
            Pipe client end.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_SERVER_END">
            <summary>
            Pipe server end.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.PIPE_UNLIMITED_INSTANCES">
            <summary>
            Unlimited server pipe instances.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.NMPWAIT_WAIT_FOREVER">
            <summary>
            Waits indefinitely when connecting to a pipe.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.NMPWAIT_NOWAIT">
            <summary>
            Does not wait for the named pipe.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.NMPWAIT_USE_DEFAULT_WAIT">
            <summary>
            Uses the default time-out specified in a call to the CreateNamedPipe method.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.GENERIC_READ">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.GENERIC_WRITE">
            <summary>
            Generic write access to the pipe.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.GENERIC_EXECUTE">
            <summary>
            Generic execute access to the pipe.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.GENERIC_ALL">
            <summary>
            Read, write, and execute access.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.CREATE_NEW">
            <summary>
            Create new file. Fails if the file exists.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.CREATE_ALWAYS">
            <summary>
            Create new file. Overrides an existing file.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.OPEN_EXISTING">
            <summary>
            Open existing file.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.OPEN_ALWAYS">
            <summary>
            Open existing file. If the file does not exist, creates it.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.TRUNCATE_EXISTING">
            <summary>
            Opens the file and truncates it so that its size is zero bytes.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.INVALID_HANDLE_VALUE">
            <summary>
            Invalid operating system handle.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.ERROR_SUCCESS">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.ERROR_CANNOT_CONNECT_TO_PIPE">
            <summary>
            The system cannot find the file specified.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.ERROR_PIPE_BUSY">
            <summary>
            All pipe instances are busy.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.ERROR_NO_DATA">
            <summary>
            The pipe is being closed.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.ERROR_PIPE_NOT_CONNECTED">
            <summary>
            No process is on the other end of the pipe.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.ERROR_MORE_DATA">
            <summary>
            More data is available.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.ERROR_PIPE_CONNECTED">
            <summary>
            There is a process on other end of the pipe.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeNative.ERROR_PIPE_LISTENING">
            <summary>
            Waiting for a process to open the other end of the pipe.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.CreateNamedPipe(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            Creates an instance of a named pipe and returns a handle for 
            subsequent pipe operations.
            </summary>
            <param name="lpName">Pointer to the null-terminated string that 
            uniquely identifies the pipe.</param>
            <param name="dwOpenMode">Pipe access mode, the overlapped mode, 
            the write-through mode, and the security access mode of the pipe handle.</param>
            <param name="dwPipeMode">Type, read, and wait modes of the pipe handle.</param>
            <param name="nMaxInstances">Maximum number of instances that can be 
            created for this pipe.</param>
            <param name="nOutBufferSize">Number of bytes to reserve for the output buffer.</param>
            <param name="nInBufferSize">Number of bytes to reserve for the input buffer.</param>
            <param name="nDefaultTimeOut">Default time-out value, in milliseconds.</param>
            <param name="pipeSecurityDescriptor">Pointer to a 
            <see cref="T:AgileFrame.NamedPipes.SECURITY_ATTRIBUTES">SECURITY_ATTRIBUTES</see> 
            object that specifies a security descriptor for the new named pipe.</param>
            <returns>If the function succeeds, the return value is a handle 
            to the server end of a named pipe instance.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.ConnectNamedPipe(System.IntPtr,AgileFrame.NamedPipes.Overlapped)">
            <summary>
            Enables a named pipe server process to wait for a client 
            process to connect to an instance of a named pipe.
            </summary>
            <param name="hHandle">Handle to the server end of a named pipe instance.</param>
            <param name="lpOverlapped">Pointer to an 
            <see cref="T:AgileFrame.NamedPipes.Overlapped">Overlapped</see> object.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.CallNamedPipe(System.String,System.Byte[],System.UInt32,System.Byte[],System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Connects to a message-type pipe (and waits if an instance of the 
            pipe is not available), writes to and reads from the pipe, and then closes the pipe.
            </summary>
            <param name="lpNamedPipeName">Pointer to a null-terminated string 
            specifying the pipe name.</param>
            <param name="lpInBuffer">Pointer to the buffer containing the data written 
            to the pipe.</param>
            <param name="nInBufferSize">Size of the write buffer, in bytes.</param>
            <param name="lpOutBuffer">Pointer to the buffer that receives the data 
            read from the pipe.</param>
            <param name="nOutBufferSize">Size of the read buffer, in bytes.</param>
            <param name="lpBytesRead">Pointer to a variable that receives the number 
            of bytes read from the pipe.</param>
            <param name="nTimeOut">Number of milliseconds to wait for the 
            named pipe to be available.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.CreateFile(System.String,System.UInt32,System.UInt32,AgileFrame.NamedPipes.SecurityAttributes,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates or opens a file, directory, physical disk, volume, console buffer, 
            tape drive, communications resource, mailslot, or named pipe.
            </summary>
            <param name="lpFileName">Pointer to a null-terminated string that 
            specifies the name of the object to create or open.</param>
            <param name="dwDesiredAccess">Access to the object (reading, writing, or both).</param>
            <param name="dwShareMode">Sharing mode of the object (reading, writing, both, or neither).</param>
            <param name="attr">Pointer to a 
            <see cref="T:AgileFrame.NamedPipes.SecurityAttributes">SecurityAttributes</see> 
            object that determines whether the returned handle can be inherited 
            by child processes.</param>
            <param name="dwCreationDisposition">Action to take on files that exist, 
            and which action to take when files do not exist.</param>
            <param name="dwFlagsAndAttributes">File attributes and flags.</param>
            <param name="hTemplateFile">Handle to a template file, with the GENERIC_READ access right.</param>
            <returns>If the function succeeds, the return value is an open handle to the specified file.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.ReadFile(System.IntPtr,System.Byte[],System.UInt32,System.Byte[],System.UInt32)">
            <summary>
            Reads data from a file, starting at the position indicated by the file pointer.
            </summary>
            <param name="hHandle">Handle to the file to be read.</param>
            <param name="lpBuffer">Pointer to the buffer that receives the data read from the file.</param>
            <param name="nNumberOfBytesToRead">Number of bytes to be read from the file.</param>
            <param name="lpNumberOfBytesRead">Pointer to the variable that receives the number of bytes read.</param>
            <param name="lpOverlapped">Pointer to an 
            <see cref="T:AgileFrame.NamedPipes.Overlapped">Overlapped</see> object.</param>
            <returns>The ReadFile function returns when one of the following 
            conditions is met: a write operation completes on the write end of 
            the pipe, the number of bytes requested has been read, or an error occurs.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.WriteFile(System.IntPtr,System.Byte[],System.UInt32,System.Byte[],System.UInt32)">
            <summary>
            Writes data to a file at the position specified by the file pointer.
            </summary>
            <param name="hHandle">Handle to the file.</param>
            <param name="lpBuffer">Pointer to the buffer containing the data to be written to the file.</param>
            <param name="nNumberOfBytesToWrite"></param>
            <param name="lpNumberOfBytesWritten">Pointer to the variable that receives the number of bytes written.</param>
            <param name="lpOverlapped">Pointer to an 
            <see cref="T:AgileFrame.NamedPipes.Overlapped">Overlapped</see> object.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.GetNamedPipeHandleState(System.IntPtr,System.IntPtr,System.UInt32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Retrieves information about a specified named pipe.
            </summary>
            <param name="hHandle">Handle to the named pipe for which information is wanted.</param>
            <param name="lpState">Pointer to a variable that indicates the current 
            state of the handle.</param>
            <param name="lpCurInstances">Pointer to a variable that receives the 
            number of current pipe instances.</param>
            <param name="lpMaxCollectionCount">Pointer to a variable that receives 
            the maximum number of bytes to be collected on the client's computer 
            before transmission to the server.</param>
            <param name="lpCollectDataTimeout">Pointer to a variable that receives 
            the maximum time, in milliseconds, that can pass before a remote named 
            pipe transfers information over the network.</param>
            <param name="lpUserName">Pointer to a buffer that receives the 
            null-terminated string containing the user name string associated 
            with the client application. </param>
            <param name="nMaxUserNameSize">Size of the buffer specified by the 
            lpUserName parameter.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.CancelIo(System.IntPtr)">
            <summary>
            Cancels all pending input and output (I/O) operations that were 
            issued by the calling thread for the specified file handle.
            </summary>
            <param name="hHandle">Handle to a file.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.WaitNamedPipe(System.String,System.Int32)">
            <summary>
            Waits until either a time-out interval elapses or an instance 
            of the specified named pipe is available for connection.
            </summary>
            <param name="name">Pointer to a null-terminated string that specifies 
            the name of the named pipe.</param>
            <param name="timeout">Number of milliseconds that the function will 
            wait for an instance of the named pipe to be available.</param>
            <returns>If an instance of the pipe is available before the 
            time-out interval elapses, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.GetLastError">
            <summary>
            Retrieves the calling thread's last-error code value.
            </summary>
            <returns>The return value is the calling thread's last-error code value.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.FlushFileBuffers(System.IntPtr)">
            <summary>
            Flushes the buffers of the specified file and causes all buffered data to be written to the file.
            </summary>
            <param name="hHandle">Handle to an open file.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.DisconnectNamedPipe(System.IntPtr)">
            <summary>
            Disconnects the server end of a named pipe instance from a client process.
            </summary>
            <param name="hHandle">Handle to an instance of a named pipe.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.SetNamedPipeHandleState(System.IntPtr,System.UInt32@,System.IntPtr,System.IntPtr)">
            <summary>
            Sets the read mode and the blocking mode of the specified named pipe.
            </summary>
            <remarks>
            If the specified handle is to the client end of a named pipe and if 
            the named pipe server process is on a remote computer, the function 
            can also be used to control local buffering.
            </remarks>
            <param name="hHandle">Handle to the named pipe instance.</param>
            <param name="mode">Pointer to a variable that supplies the new mode.</param>
            <param name="cc">Pointer to a variable that specifies the maximum 
            number of bytes collected on the client computer before 
            transmission to the server.</param>
            <param name="cd">Pointer to a variable that specifies the 
            maximum time, in milliseconds, that can pass before a remote 
            named pipe transfers information over the network.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.CloseHandle(System.IntPtr)">
            <summary>
            Closes an open object handle.
            </summary>
            <param name="hHandle">Handle to an open object.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.SetSecurityDescriptorDacl(AgileFrame.NamedPipes.SECURITY_DESCRIPTOR@,System.Boolean,System.IntPtr,System.Boolean)">
            <summary>
            Sets the security descriptor attributes
            </summary>
            <param name="sd">Reference to a SECURITY_DESCRIPTOR structure.</param>
            <param name="bDaclPresent"></param>
            <param name="Dacl"></param>
            <param name="bDaclDefaulted"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.InitializeSecurityDescriptor(AgileFrame.NamedPipes.SECURITY_DESCRIPTOR@,System.Int32)">
            <summary>
            Initializes a SECURITY_DESCRIPTOR structure.
            </summary>
            <param name="sd"></param>
            <param name="dwRevision"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeNative.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="T:AgileFrame.NamedPipes.SECURITY_DESCRIPTOR">
            <summary>
            Security Descriptor structure
            </summary>
        </member>
        <member name="T:AgileFrame.NamedPipes.SECURITY_ATTRIBUTES">
            <summary>
            Security Attributes structure.
            </summary>
        </member>
        <member name="T:AgileFrame.NamedPipes.Overlapped">
            <summary>
            This class is used as a dummy parameter only.
            </summary>
        </member>
        <member name="T:AgileFrame.NamedPipes.SecurityAttributes">
            <summary>
            This class is used as a dummy parameter only.
            </summary>
        </member>
        <member name="T:AgileFrame.NamedPipes.NamedPipeWrapper">
            <summary>
            A utility class that exposes named pipes operations.
            </summary>
            <remarks>
            This class uses the exposed exposed kernel32.dll methods by the 
            <see cref="T:AgileFrame.NamedPipes.NamedPipeNative">NamedPipeNative</see> class
            to provided controlled named pipe functionality.
            </remarks>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeWrapper.ATTEMPTS">
            <summary>
            The number of retries when creating a pipe or connecting to a pipe.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.NamedPipeWrapper.WAIT_TIME">
            <summary>
            Wait time for the 
            <see cref="M:AgileFrame.NamedPipes.NamedPipeNative.WaitNamedPipe(System.String,System.Int32)">NamedPipeNative.WaitNamedPipe</see> 
            operation.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.Read(AgileFrame.NamedPipes.PipeHandle,System.Int32)">
            <summary>
            Reads a string from a named pipe using the UTF8 encoding.
            </summary>
            <param name="handle">The pipe handle.</param>
            <param name="maxBytes">The maximum bytes to read.</param>
            <returns>A UTF8 string.</returns>
            <remarks>This function uses 
            <see cref="M:AgileFrame.NamedPipes.NamedPipeWrapper.ReadBytes(AgileFrame.NamedPipes.PipeHandle,System.Int32)">AgileFrame.NamedPipes.ReadBytes</see> 
            to read the bytes from the pipe and then converts them to string.<br/><br/>
            The first four bytes of the pipe data are expected to contain 
            the data length of the message. This method first reads those four 
            bytes and converts them to integer. It then continues to read from the pipe using 
            the extracted data length.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.ReadBytes(AgileFrame.NamedPipes.PipeHandle,System.Int32)">
            <summary>
            Reads the bytes from a named pipe.
            </summary>
            <param name="handle">The pipe handle.</param>
            <param name="maxBytes">The maximum bytes to read.</param>
            <returns>An array of bytes.</returns>
            <remarks>This method expects that the first four bytes in the pipe define 
            the length of the data to read. If the data length is greater than 
            <b>maxBytes</b> the method returns null.<br/><br/>
            The first four bytes of the pipe data are expected to contain 
            the data length of the message. This method first reads those four 
            bytes and converts them to integer. It then continues to read from the pipe using 
            the extracted data length.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.Write(AgileFrame.NamedPipes.PipeHandle,System.String)">
            <summary>
            Writes a string to a named pipe.
            </summary>
            <param name="handle">The pipe handle.</param>
            <param name="text">The text to write to the pipe.</param>
            <remarks>This method converts the text into an array of bytes, using the 
            UTF8 encoding and the uses 
            <see cref="M:AgileFrame.NamedPipes.NamedPipeWrapper.WriteBytes(AgileFrame.NamedPipes.PipeHandle,System.Byte[])">AgileFrame.NamedPipes.WriteBytes</see>
            to write to the pipe.<br/><br/>
            When writing to a pipe the method first writes four bytes that define the data length.
            It then writes the whole message.</remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.WriteBytes(AgileFrame.NamedPipes.PipeHandle,System.Byte[])">
            <summary>
            Writes an array of bytes to a named pipe.
            </summary>
            <param name="handle">The pipe handle.</param>
            <param name="bytes">The bytes to write.</param>
            <remarks>If we try bytes array we attempt to write is empty then this method write a space character to the pipe. This is necessary because the other end of the pipe uses a blocking Read operation so we must write someting.<br/><br/>
            The bytes length is restricted by the <b>maxBytes</b> parameter, which is done primarily for security reasons.<br/><br/>
            When writing to a pipe the method first writes four bytes that define the data length.
            It then writes the whole message.</remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.TryConnectToPipe(System.String,AgileFrame.NamedPipes.PipeHandle@)">
            <summary>
            Tries to connect to a named pipe on the same machine.
            </summary>
            <param name="pipeName">The name of the pipe.</param>
            <param name="handle">The resulting pipe handle.</param>
            <returns>Return true if the attempt succeeds.</returns>
            <remarks>This method is used mainly when stopping the pipe server. It unblocks the existing pipes, which wait for client connection.</remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.TryConnectToPipe(System.String,System.String,AgileFrame.NamedPipes.PipeHandle@)">
            <summary>
            Tries to connect to a named pipe.
            </summary>
            <param name="pipeName">The name of the pipe.</param>
            <param name="serverName">The name of the server.</param>
            <param name="handle">The resulting pipe handle.</param>
            <returns>Return true if the attempt succeeds.</returns>
            <remarks>This method is used mainly when stopping the pipe server. It unblocks the existing pipes, which wait for client connection.</remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.ConnectToPipe(System.String)">
            <summary>
            Connects to a server named pipe on the same machine.
            </summary>
            <param name="pipeName">The pipe name.</param>
            <returns>The pipe handle, which also contains the pipe state.</returns>
            <remarks>This method is used by clients to establish a pipe connection with a server pipe.</remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.ConnectToPipe(System.String,System.String)">
            <summary>
            Connects to a server named pipe.
            </summary>
            <param name="pipeName">The pipe name.</param>
            <param name="serverName">The server name.</param>
            <returns>The pipe handle, which also contains the pipe state.</returns>
            <remarks>This method is used by clients to establish a pipe connection with a server pipe.</remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.Create(System.String,System.UInt32,System.UInt32)">
            <summary>
            Creates a server named pipe.
            </summary>
            <param name="name">The name of the pipe.</param>
            <param name="outBuffer">The size of the outbound buffer.</param>
            <param name="inBuffer">The size of the inbound buffer.</param>
            <returns>The pipe handle.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.Create(System.String,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Creates a server named pipe.
            </summary>
            <param name="name">The name of the pipe.</param>
            <param name="outBuffer">The size of the outbound buffer.</param>
            <param name="inBuffer">The size of the inbound buffer.</param>
            <param name="secure">Specifies whether to make the pipe secure.</param>
            <returns>The pipe handle.</returns>
            <remarks>You can specify a security descriptor for a named pipe when you call the CreateNamedPipe function. The security descriptor controls access to both client and server ends of the named pipe. If NULL is specified, the named pipe gets a default security descriptor. The ACLs in the default security descriptor for a named pipe grant full control to the LocalSystem account, administrators, and the creator owner. They also grant read access to members of the Everyone group and the anonymous account.
            <br/><br/>
            If the <b>secure</b> parameter is false the method creates a security descriptor that grants full access to Everyone.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.GetNullDaclSecurityDescriptor(AgileFrame.NamedPipes.SECURITY_DESCRIPTOR@)">
            <summary>
            Creates a SECURITY_DESCRIPTOR with DACL = null, which allows full access to Everyone.
            </summary>
            <param name="sd">The SECURITY_DESCRIPTOR structure.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.Connect(AgileFrame.NamedPipes.PipeHandle)">
            <summary>
            Starts waiting for client connections.
            </summary>
            <remarks>
            Blocks the current execution until a client pipe attempts to establish a connection.
            </remarks>
            <param name="handle">The pipe handle.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.NumberPipeInstances(AgileFrame.NamedPipes.PipeHandle)">
            <summary>
            Returns the number of instances of a named pipe.
            </summary>
            <param name="handle">The pipe handle.</param>
            <returns>The number of instances.</returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.Close(AgileFrame.NamedPipes.PipeHandle)">
            <summary>
            Closes a named pipe and releases the native handle.
            </summary>
            <param name="handle">The pipe handle.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.Flush(AgileFrame.NamedPipes.PipeHandle)">
            <summary>
            Flushes all the data in a named pipe.
            </summary>
            <param name="handle">The pipe handle.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.Disconnect(AgileFrame.NamedPipes.PipeHandle)">
            <summary>
            Disconnects a server named pipe from the client.
            </summary>
            <remarks>
            Server pipes can be reused by first disconnecting them from the client and then
            calling the <see cref="M:AgileFrame.NamedPipes.NamedPipeWrapper.Connect(AgileFrame.NamedPipes.PipeHandle)">Connect</see>
            method to start listening. This improves the performance as it is not necessary
            to create new pipe handles.
            </remarks>
            <param name="handle">The pipe handle.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.NamedPipeWrapper.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="T:AgileFrame.NamedPipes.ServerPipeConnection">
            <summary>
            Used by server applications to communicate with client ones by using named pipes.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.ServerPipeConnection.Disconnect">
            <summary>
            Disconnects a client named pipe.
            </summary>
            <remarks>
            When a client named pipe is disconnected, the server one is not closed. 
            The latter can later be reused by starting to listen again.<br/><br/>
            In a message oriented protocol the server will disconnect the client when the 
            response is sent and all the data is flushed. The same server named pipe 
            could then be reused by calling the 
            <see cref="M:AgileFrame.NamedPipes.ServerPipeConnection.Connect">Connect</see> method.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.ServerPipeConnection.Close">
            <summary>
            Closes the operating system native handle of the named pipe.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.ServerPipeConnection.Connect">
            <summary>
            Starts listening to client pipe connections.
            </summary>
            <remarks>
            This method will block the program execution until a client pipe attempts
            to establish a connection.<br/><br/>
            When a client named pipe is disconnected, the server one is not closed. 
            The latter can later be reused by starting to listen again.<br/><br/>
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.ServerPipeConnection.#ctor(System.String,System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Creates a ServerPipeConnection instance and the underlying operating system handle.
            </summary>
            <param name="name">The name of the pipe.</param>
            <param name="outBuffer">The outbound buffer.</param>
            <param name="inBuffer">The inbound buffer.</param>
            <param name="maxReadBytes">The maximum bytes to read from clients.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.ServerPipeConnection.#ctor(System.String,System.UInt32,System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Creates a ServerPipeConnection instance and the underlying operating system handle.
            </summary>
            <param name="name">The name of the pipe.</param>
            <param name="outBuffer">The outbound buffer.</param>
            <param name="inBuffer">The inbound buffer.</param>
            <param name="secure">Specifies whether the pipe is secure.</param>
            <param name="maxReadBytes">The maximum bytes to read from clients.</param>
            <remarks>If the <b>secure</b> parameter is true the default security descriptor is used. The ACLs in the default security descriptor for a named pipe grant full control to the LocalSystem account, administrators, and the creator owner. They also grant read access to members of the Everyone group and the anonymous account.
            <br/><br/>
            If the <b>secure</b> parameter is false the method creates a security descriptor that grants full access to Everyone.
            </remarks>
        </member>
        <member name="M:AgileFrame.NamedPipes.ServerPipeConnection.Finalize">
            <summary>
            Object destructor.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.CodeTimer">
            <summary>
             高精度性能计数器 使用方法：//CodeTimer.Time("QueryForTable", delegate(){......});
             </summary>
        </member>
        <member name="M:AgileFrame.Core.CodeTimer.QueryThreadCycleTime(System.IntPtr,System.UInt64@)">
            <summary>
            没用到，线程在内核态占用的时间
            </summary>
            <param name="threadHandle"></param>
            <param name="cycleTime"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.CodeTimer.Time(System.String,AgileFrame.Core.CodeTimer.ActionDelegate)">
            <summary>
            性能计时器 计数器函数
            </summary>
            <param name="name">标记的方法名称</param>
            <param name="action">匿名方法，格式是 delegate() { Thread.Sleep(3000); }或者delegate() { MyMethod(); }</param>
        </member>
        <member name="M:AgileFrame.Core.CodeTimer.TimeForConsole(System.String,AgileFrame.Core.CodeTimer.ActionDelegate)">
            <summary>
            性能计时器 计数器函数  匿名方法，格式是 delegate() { Thread.Sleep(3000); }或者delegate() { MyMethod(); }
            </summary>
            <param name="name">标记的方法名称</param>
            <param name="action">匿名方法，格式是 delegate() { Thread.Sleep(3000); }或者delegate() { MyMethod(); }</param>
        </member>
        <member name="M:AgileFrame.Core.CodeTimer.Time(System.String,System.Int32,AgileFrame.Core.Util.IAction)">
            <summary>
            没用的函数 默认为控制台输出 
            </summary>
            <param name="name"></param>
            <param name="iteration"></param>
            <param name="action"></param>
        </member>
        <member name="T:AgileFrame.Core.CodeTimer.ActionDelegate">
            <summary>
            采用 接口 取代了原代码中的 Lambda 表达式
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Core.Util.AsynchronousRegex">
            <summary>
            关于正则表达式匹配无异常资源耗尽的解决方案关于正则表达式匹配无异常资源耗尽的解决方案
            </summary>
        </member>
        <member name="T:AgileFrame.Core.DoTextWriter">
            <summary>
            TextWriter that writes into System.Diagnostics.Debug
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ITextWriter">
            <summary>
            使用的载体类
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ITextWriter.WriteLine(System.String,System.String)">
            <summary>
            LoggingType 为使用的日志类型传入。
            </summary>
            <param name="exceptionMessage"></param>
            <param name="LoggingType"></param>
        </member>
        <member name="M:AgileFrame.Core.DoTextWriter.WriteLine(System.String,System.String,System.String)">
            <summary>
            不区分类型保存，直接保存在一个目录中
            </summary>
            <param name="friendMessage"></param>
            <param name="exceptionMessage"></param>
            <param name="LoggingType"></param>
        </member>
        <member name="T:AgileFrame.Core.DataSetHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Core.DataSetHelper.CompareDataSet(System.Data.DataSet,System.Data.DataSet)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Core.DataSetHelper.ConvertXMLToDataSet(System.String)">
            <summary>
            将xml对象内容字符串转换为DataSet
            </summary>
        </member>
        <member name="M:AgileFrame.Core.DataSetHelper.ConvertXMLFileToDataSet(System.String)">
            <summary>
            将xml文件转换为DataSet
            </summary>
        </member>
        <member name="M:AgileFrame.Core.DataSetHelper.ConvertDataSetToXML(System.Data.DataSet)">
            <summary>
            将DataSet转换为xml对象字符串
            </summary>
        </member>
        <member name="M:AgileFrame.Core.DataSetHelper.ConvertDataSetToXMLFile(System.Data.DataSet,System.String)">
            <summary>
            将DataSet转换为xml文件
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Xml2Json">
            <summary>
            .NET中利用Ebay的XSLT模板转换XML到JSON
            从XML转换到JSON的方法有多种, 不过都要依赖第三方的库来实现转化,不过有了eBay提供的xml-2-json.xlst模板,你会发现转换原来很轻松.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Xml2Json.Convert(System.Data.DataSet)">
            <summary>
            然后定义三个重载方法，来负责转换或序列化对象生成XML：
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.Xml2Json.Convert(System.Object)">
            <summary>
            转换Model
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.Xml2Json.Convert(System.String)">
            <summary>
            直接读XML并转换
            </summary>
            <param name="XMLFilename"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.MyID">
            <summary>
            Represents an ObjectId (see also BsonObjectId).
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MyID.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="bytes">The value.</param>
        </member>
        <member name="M:AgileFrame.Core.MyID.#ctor(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:AgileFrame.Core.MyID.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:AgileFrame.Core.MyID.op_LessThan(AgileFrame.Core.MyID,AgileFrame.Core.MyID)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is less than the second ObjectId.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.op_LessThanOrEqual(AgileFrame.Core.MyID,AgileFrame.Core.MyID)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is less than or equal to the second ObjectId.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.op_Equality(AgileFrame.Core.MyID,AgileFrame.Core.MyID)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are equal.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.op_Inequality(AgileFrame.Core.MyID,AgileFrame.Core.MyID)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are not equal.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.op_GreaterThanOrEqual(AgileFrame.Core.MyID,AgileFrame.Core.MyID)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is greather than or equal to the second ObjectId.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.op_GreaterThan(AgileFrame.Core.MyID,AgileFrame.Core.MyID)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is greather than the second ObjectId.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.GenerateNewId">
            <summary>
            Generates a new ObjectId with a unique value.
            </summary>
            <returns>A ObjectId.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.Pack(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Packs the components of an ObjectId into a byte array.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.Parse(System.String)">
            <summary>
            Parses a string and creates a new ObjectId.
            </summary>
            <param name="s">The string value.</param>
            <returns>A ObjectId.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.TryParse(System.String,AgileFrame.Core.MyID@)">
            <summary>
            Tries to parse a string and create a new ObjectId.
            </summary>
            <param name="s">The string value.</param>
            <param name="objectId">The new ObjectId.</param>
            <returns>True if the string was parsed successfully.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.Unpack(System.Byte[],System.Int32@,System.Int32@,System.Int16@,System.Int32@)">
            <summary>
            Unpacks a byte array into the components of an ObjectId.
            </summary>
            <param name="bytes">A byte array.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:AgileFrame.Core.MyID.CompareTo(AgileFrame.Core.MyID)">
            <summary>
            Compares this ObjectId to another ObjectId.
            </summary>
            <param name="other">The other ObjectId.</param>
            <returns>A 32-bit signed integer that indicates whether this ObjectId is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.Equals(AgileFrame.Core.MyID)">
            <summary>
            Compares this ObjectId to another ObjectId.
            </summary>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are equal.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.Equals(System.Object)">
            <summary>
            Compares this ObjectId to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is an ObjectId and equal to this one.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.ToByteArray">
            <summary>
            Converts the ObjectId to a byte array.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:AgileFrame.Core.MyID.Empty">
            <summary>
            Gets an instance of ObjectId where the value is empty.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyID.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyID.Machine">
            <summary>
            Gets the machine.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyID.Pid">
            <summary>
            Gets the PID.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyID.Increment">
            <summary>
            Gets the increment.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyID.CreationTime">
            <summary>
            Gets the creation time (derived from the timestamp).
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MyID.Utils.TryParseHexString(System.String,System.Byte[]@)">
            <summary>
            Tries to parse a hex string to a byte array.
            </summary>
            <param name="s">The hex string.</param>
            <param name="bytes">A byte array.</param>
            <returns>True if the hex string was successfully parsed.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.Utils.ParseHexString(System.String)">
            <summary>
            Tries to parse a hex string to a byte array.
            </summary>
            <param name="s">The hex string.</param>
            <param name="bytes">A byte array.</param>
            <returns>True if the hex string was successfully parsed.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyID.Utils.ToHexString(System.Byte[])">
            <summary>
            Converts a byte array to a hex string.
            </summary>
            <param name="bytes">The byte array.</param>
            <returns>A hex string.</returns>
        </member>
        <member name="P:AgileFrame.Core.MyID.Constants.DateTimeMaxValueMillisecondsSinceEpoch">
            <summary>
            Gets the number of milliseconds since the Unix epoch for DateTime.MaxValue.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyID.Constants.DateTimeMinValueMillisecondsSinceEpoch">
            <summary>
            Gets the number of milliseconds since the Unix epoch for DateTime.MinValue.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyID.Constants.UnixEpoch">
            <summary>
            Gets the Unix Epoch for BSON DateTimes (1970-01-01).
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Program.Main">
            <summary>
            应用程序的主入口点。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ApplicationType">
            <summary>
            判断应用程序的类型
            </summary>
        </member>
        <member name="M:AgileFrame.Core.DosService.excuteCommand(System.String,System.String,AgileFrame.Core.dosGetMessage)">
            <summary>
            excuteCommand("cmd", @"/c ren c:\test3 test5", new dosGetMessage(PrintMessage));
            excuteCommand("ipconfig", "", new dosGetMessage(PrintMessage));
            excuteCommand("systeminfo", "", new dosGetMessage(PrintMessage)); 获得系统信息，使用的是 systeminfo.exe 这个控制台程序
            excuteCommand("cmd", "/c dir", new dReadLine(PrintMessage));
            </summary>
            <param name="strFile"></param>
            <param name="args"></param>
            <param name="dosGetMessage"></param>
        </member>
        <member name="T:IdentifyEncoding">
            <summary>
            检测字符编码的类
            <seealso cref="T:System.IO.Stream"/>
            <seealso cref="T:System.Uri"/>
            <seealso cref="T:System.IO.FileInfo"/>
            </summary>
            <remarks>
            <![CDATA[
            <strong>IdentifyEncoding</strong> 用来检测 <see cref="Uri"/>,<see cref="FileInfo"/>,<see cref="sbyte"/> 字节数组的编码．
            Create By lion  <br/>
            2005-02-21 22:00  <br/>
            Support .Net Framework v1.1.4322 <br/> 
            WebSite：www.lionsky.net(lion-a AT sohu.com) <br/> 
            ]]>
            </remarks>
        </member>
        <member name="M:IdentifyEncoding.#ctor">
            <summary>
            初始化 <see cref="T:IdentifyEncoding"/> 的实例
            </summary>
        </member>
        <member name="M:IdentifyEncoding.GetEncodingName(System.Uri)">
            <summary>
            从指定的 <see cref="T:System.Uri"/> 中判断编码类型
            </summary>
            <param name="testurl">要判断的 <see cref="T:System.Uri"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(new Uri("http://china5.nikkeibp.co.jp/china/news/com/200307/pr_com200307170131.html")));  
            </code>
            </example>
        </member>
        <member name="M:IdentifyEncoding.GetEncodingName(System.IO.FileInfo)">
            <summary>
            从指定的 <see cref="T:System.IO.FileInfo"/> 中判断编码类型
            </summary>
            <param name="testfile">要判断的 <see cref="T:System.IO.FileInfo"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(new FileInfo(@"C:\test.txt")));  
            </code>
            </example>
        </member>
        <member name="M:IdentifyEncoding.GetEncodingName(System.SByte[])">
            <summary>
            从指定的 <see cref="T:System.SByte"/> 字节数组中判断编码类型
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.IO.FileInfo"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(IdentifyEncoding.ToSByteArray(System.Text.Encoding.GetEncoding("gb2312").GetBytes("Lion互动网络(www.lionsky.net)")))); 
            </code>
            </example>
        </member>
        <member name="M:IdentifyEncoding.GB2312Probability(System.SByte[])">
            <summary>
            判断是GB2312编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.GBKProbability(System.SByte[])">
            <summary>
            判断是GBK编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.HZProbability(System.SByte[])">
            <summary>
            判断是HZ编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.BIG5Probability(System.SByte[])">
            <summary>
            判断是BIG5编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.ENCTWProbability(System.SByte[])">
            <summary>
            判断是CNS11643(台湾)编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.ISO2022CNProbability(System.SByte[])">
            <summary>
            判断是ISO2022CN编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.UTF8Probability(System.SByte[])">
            <summary>
            判断是UTF8编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.UnicodeProbability(System.SByte[])">
            <summary>
            判断是Unicode编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.ASCIIProbability(System.SByte[])">
            <summary>
            判断是ASCII编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:IdentifyEncoding.Initialize_Frequencies">
            <summary>
            初始化必要的条件
            </summary>
        </member>
        <member name="M:IdentifyEncoding.ToByteArray(System.SByte[])">
            <summary>
            将此实例中的指定 <see cref="T:System.SByte"/> 字符数组转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="sbyteArray">要转换的 <see cref="T:System.SByte"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:IdentifyEncoding.ToByteArray(System.String)">
            <summary>
            将此实例中的指定字符串转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="sourceString">要转换的字符串</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:IdentifyEncoding.ToByteArray(System.Object[])">
            <summary>
            将此实例中的指定 <see cref="T:System.Object"/> 数组转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="tempObjectArray">要转换的 <see cref="T:System.Object"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:IdentifyEncoding.ToSByteArray(System.Byte[])">
            <summary>
            将此实例中的指定 <see cref="T:System.Byte"/> 字符数组转换到 <see cref="T:System.SByte"/> 字符数组。
            </summary>
            <param name="byteArray">要转换的 <see cref="T:System.Byte"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.SByte"/> 字符数组</returns>
        </member>
        <member name="M:IdentifyEncoding.ReadInput(System.IO.Stream,System.SByte[]@,System.Int32,System.Int32)">
            <summary>从流读取字节序列,并将此流中的位置提升读取的字节数.</summary>
            <param name="sourceStream">要读取的流.</param>
            <param name="target">字节数组。此方法返回时,该缓冲区包含指定的字符数组,该数组的 start 和 (start + count-1) 之间的值由从当前源中读取的字节替换。</param>
            <param name="start">buffer 中的从零开始的字节偏移量,从此处开始存储从当前流中读取的数据。.</param>
            <param name="count">要从当前流中最多读取的字节数。</param>
            <returns>读入缓冲区中的总字节数。如果当前可用的字节数没有请求的字节数那么多,则总字节数可能小于请求的字节数,或者如果已到达流的末尾,则为零 (0)。</returns>
            <exception cref="T:System.ArgumentException">start 与 count 的和大于缓冲区长度。</exception>
            <exception cref="T:System.ArgumentNullException">target 为空引用(Visual Basic 中为 Nothing)。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset 或 count 为负。</exception>
            <exception cref="T:System.IO.IOException">发生 I/O 错误。</exception>
            <exception cref="T:System.NotSupportedException">流不支持读取。</exception>
            <exception cref="T:System.ObjectDisposedException">在流关闭后调用方法。</exception>
        </member>
        <member name="M:IdentifyEncoding.ReadInput(System.IO.TextReader,System.SByte[]@,System.Int32,System.Int32)">
            <summary>从字符系列读取字节序列,并将此字符系列中的位置提升读取的字节数。</summary>
            <param name="sourceTextReader">要读取的流。</param>
            <param name="target">字节数组。此方法返回时,该缓冲区包含指定的字符数组,该数组的 start 和 (start + count-1) 之间的值由从当前源中读取的字节替换。</param>
            <param name="start">buffer 中的从零开始的字节偏移量,从此处开始存储从当前流中读取的数据。.</param>
            <param name="count">要从当前流中最多读取的字节数。</param>
            <returns>读入缓冲区中的总字节数。如果当前可用的字节数没有请求的字节数那么多,则总字节数可能小于请求的字节数,或者如果已到达流的末尾,则为零 (0)。</returns>
            <exception cref="T:System.ArgumentException">start 与 count 的和大于缓冲区长度。</exception>
            <exception cref="T:System.ArgumentNullException">target 为空引用(Visual Basic 中为 Nothing)。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset 或 count 为负。</exception>
            <exception cref="T:System.IO.IOException">发生 I/O 错误。</exception>
            <exception cref="T:System.NotSupportedException">流不支持读取。</exception>
            <exception cref="T:System.ObjectDisposedException">在流关闭后调用方法。</exception>
        </member>
        <member name="M:IdentifyEncoding.FileLength(System.IO.FileInfo)">
            <summary>
            检测当前文件的大小
            </summary>
            <param name="file">被检测的文件</param>
            <returns>当前文件的大小。</returns>
        </member>
        <member name="M:IdentifyEncoding.Identity(System.Int64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:IdentifyEncoding.Identity(System.UInt64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:IdentifyEncoding.Identity(System.Single)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:IdentifyEncoding.Identity(System.Double)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:AgileFrame.Core.CultureService.SetDefaultCulture">
            <summary>
            日期可能是美国格式，也可能是英国格式。货币可能是新西兰格式，也可能是加拿大格式。由于这种多义性，指定特定区域性（如“en-US”、“en-GB”或“en-CA”）就显得十分必要。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ILanguageHandler">
            <summary>
            扩展通过遍历方式实现的多语言
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ILanguageHandler.HandlerControlLanguage(System.Object)">
            <summary>
            Control control
            </summary>
            <param name="control">Control control</param>
        </member>
        <member name="T:AgileFrame.Core.LanguageServiceFileType">
            <summary>
            多语言类型、0：文本多语言，1：消息多语言，2：字段注释多语言
            </summary>
        </member>
        <member name="T:AgileFrame.Core.LanguageService">
            <summary>
            多语言服务，采用Encoding.UTF8 而不是 Encoding.Default
            XmlNode.SelectNodes("//Document|//document");   可以实现不区分大小写
            Language = 0, Message = 1, DbField = 2
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ILanguageService">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ILanguageService.GetLanguageString_Delegate(System.String)">
            <summary>
            
            </summary>
            <param name="KeyID"></param>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.CultureNameToLangType">
            <summary>
            配置文件中指定的可支持的语言类型
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.DicLangType">
            <summary>
            不包含id的，(LanguageKey,(AllLanguageID,LanguageValue For this Language))
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.DicLTypeKeyValue">
            <summary>
            LanguageKey,values
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.DicLTypeValueKey">
            <summary>
            LanguageKey,values,int
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.LangErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.m_DefaultLanguageKey">
            <summary>
            请使用 LanguageServiceManger.DefaultLanguageKey 来设置语言变化
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.IsNewLanguageKey">
            <summary>
            是否新语言
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.IsChineseDoLanguage">
            <summary>
            设置中文是否也经过多语言翻译文件
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.LastDefaultLanguageKey">
            <summary>
            当前窗体的语言，实现实时切换
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.FileList">
            <summary>
            不同业务领域的多语言，目录与 业务领域Key的对应关系。
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.AddBusinessType(System.String,System.String,System.String)">
            <summary>
            AddBusinessType("message.xml","message","message service for xxx.. xxx消息服务");
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.UpdateXml">
            <summary>
            重新同步xml多语言文件
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetLanguageTypes(System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            语言列表
            </summary>
            <param name="keys">获取list key</param>
            <param name="values">显示的语言名称</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.SetDefaultLanguageKey(System.String)">
            <summary>
            设置缺省语言
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetAreaStr">
            <summary>
            读取当前线程的区域性，并从匹配中获得其key的字符串 Chinese,English等
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetArea">
            <summary>
            读取当前线程的区域性，zh-cn en-us 等
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetArea(System.String)">
            <summary>
            读取当前线程的区域性，zh-cn en-us 等
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.IsAvailable">
            <summary>
            检查是否已合理初始化
            </summary>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.AddLangKeyListStr">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.AddLangKeyListIDList">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.IsSaveing">
            <summary>
            解决文件写入同步冲突
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.SaveLanguageTypeToXml(System.String,System.String)">
            <summary>
            多线程实现异步
            </summary>
            <param name="oldLanguageType"></param>
            <param name="newLanguageType"></param>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetPostion(System.String,System.Int32)">
            <summary>
            读取位置
            </summary>
            <param name="Key"></param>
            <param name="FileType"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetLanguageString(System.String)">
            <summary>
            传入Language.xml中的id号，获取对应的文字信息
            </summary>
            <param name="KeyID">0，1，2 文本、消息、字典多语言</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetLanguageString(System.String,System.String)">
            <summary>
            传入Language.xml中的id号与中文字符串，获取对应的文字信息
            </summary>
            <param name="KeyID"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetMyLanguageString(System.String,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetLanguageString(System.Int32,System.String,System.String)">
            <summary>
            按多语言类型获取结果
            </summary>
            <param name="FileType">类型 0：文本多语言，1：消息多语言，2：字段注释多语言</param>
            <param name="KeyID">主键</param>
            <param name="zhTxt">中文值</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetLanguageString(System.Int32,System.String,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LanguageService.IsExistLanguageServiceInstance">
            <summary>
            以确保析构会发生，将保存字节到xml
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetMessageString(System.String,System.String)">
            <summary>
            消息多语言，1代表消息多语言。
            0：文本多语言，1：消息多语言，2：字段注释多语言
            </summary>
            <param name="KeyID"></param>
            <param name="zhTxt"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetMessageString(System.String)">
            <summary>
            消息多语言
            </summary>
            <param name="KeyID"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetMessageStringFormat(System.String,System.String,System.Object[])">
            <summary>
            消息多语言，格式化替换方式
            </summary>
            <param name="KeyID"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.FillFormLanguage(System.Object)">
            <summary>
            C/S系统中实现
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.GetLanguageString(System.Object)">
            <summary>
            C/S系统中实现
            </summary>
            <param name="ctl"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.LanguageService.ParseAttributeName(System.String,System.String@,System.String@,System.String@)">
            <summary>
            
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.IsEnabled">
            <summary>
            多语言即时翻译服务
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.IsAutoWriteControlXmlEnabled">
            <summary>
            多语言写入翻译服务，只在翻译人员需要翻译的时候启用。
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.IsAutoBakeFile">
            <summary>
            当修改发生时，多语言自动备份修改前的多语言文件，防止丢失。
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.LanguageServiceSaveXml">
            <summary>
            多语言写入翻译服务，只在翻译人员需要翻译的时候启用。
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.SystemLanguageKey">
            <summary>
            系统开发用缺省用语言，开发人员写入系统的语言，该项目将获得特别的便捷支持
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.OldLanguageKey">
            <summary>
            变化前的语言
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.IsChinese">
            <summary>
            是否中文
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.DefaultLanguageKey">
            <summary>
            "English/Chinese/French"
            请使用 LanguageServiceManger.DefaultLanguageKey 来设置语言变化.
            缺省的多语言key，支持在运行过程中进行语言文件的修改，但是不重新读取xml；需重新读取xml，请调用 LanguageService.RefreshLanguageService = true;
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.LangKeyFile">
            <summary>
            设置 \Xml\Languages.xml
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.LangTypeFile">
            <summary>
            设置 \Xml\LanguageTypes.xml
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.MessageFile">
            <summary>
            设置 \Xml\Messages.xml
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.DbLangKeyFile">
            <summary>
            数据库翻译的那块用
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LanguageService.RefreshLanguageService">
            <summary>
            刷新读取多语言xml文件，为true，则刷新一下。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.SQLService">
            <summary>
            数据结构所使用的脚本——
            {表注释}  {表名} {首字母大写表名}
            {列名} {列注释} {小写列名} {首字母大写列名} {字段长度} {列名sql类型} {列名oleDbSql类型} {js类型} {是否必须} {是否自增长} {类型空值} {默认值}
            chx:{列数据库类型} {列数据库空值} {旧列名}
            wcp:
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ThreadService.DoThread(System.Threading.ThreadStart,System.Boolean@)">
            <summary>
            多线程执行完毕，IsBuilding为false。
            </summary>
            <param name="thread"></param>
            <param name="IsBuilding"></param>
        </member>
        <!-- 对于成员“T:AgileFrame.Core.XmlFilter”忽略有格式错误的 XML 注释 -->
        <member name="M:AgileFrame.Core.XmlFilter.EnCoding(System.String)">
            <summary>
            过滤xml非法字符，并进行转换
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.XmlFilter.DeCoding(System.String)">
            <summary>
            xml恢复
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.OleDbTextWriter">
            <summary>
            TextWriter that writes into System.Diagnostics.Debug
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AddInAction">
            <summary>
              Specifies the action to be taken for a specific <see cref="T:AgileFrame.Core.AddIn"/>.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AddInAction.Enable">
            <summary>
              Enable the <see cref="T:AgileFrame.Core.AddIn"/>.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AddInAction.Disable">
            <summary>
                Disable the <see cref="T:AgileFrame.Core.AddIn"/>.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AddInAction.Install">
            <summary>
                Install the <see cref="T:AgileFrame.Core.AddIn"/>.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AddInAction.Uninstall">
            <summary>
                Uninstall the <see cref="T:AgileFrame.Core.AddIn"/>.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AddInAction.Update">
            <summary>
                Update the <see cref="T:AgileFrame.Core.AddIn"/>.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AddInAction.InstalledTwice">
            <summary>
            The <see cref="T:AgileFrame.Core.AddIn"/> is disabled because it has been installed
            twice (duplicate identity).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AddInAction.DependencyError">
            <summary>
                Tells that the <see cref="T:AgileFrame.Core.AddIn"/> cannot be loaded because not all dependencies are satisfied.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AddInAction.CustomError">
            <summary>
            A custom error has occurred (e.g. the AddIn disabled itself using a condition).
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AddInManager">
            <summary>
            Manages all actions performed on <see cref="T:AgileFrame.Core.AddIn"/>s.
            An AddInManager GUI can use the methods here to install/update/uninstall
            <see cref="T:AgileFrame.Core.AddIn"/>s.
            
            There are three types of AddIns:
            - Preinstalled AddIns (added by host application) -&gt; can only be disabled
            - External AddIns -&gt; can be added, disabled and removed
            	Removing external AddIns only removes the reference to the .addin file
                but does not delete the AddIn.
            - User AddIns -&gt; are installed to UserAddInPath, can be installed, disabled
                and uninstalled
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInManager.InstallAddIns(System.Collections.Generic.List{System.String})">
            <summary>
            Installs the AddIns from AddInInstallTemp to the UserAddInPath.
            In case of installation errors, a error message is displayed to the user
            and the affected AddIn is added to the disabled list.
            This method is normally called by <see cref="M:AgileFrame.Core.CoreStartup.ConfigureUserAddIns(System.String,System.String)"/>
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInManager.RemoveUserAddInOnNextStart(System.String)">
            <summary>
            Uninstalls the user addin on next start.
            <see cref="M:AgileFrame.Core.AddInManager.RemoveUserAddInOnNextStart(System.String)"/> schedules the AddIn for
            deinstallation, you can unschedule it using
            <see cref="M:AgileFrame.Core.AddInManager.AbortRemoveUserAddInOnNextStart(System.String)"/>
            </summary>
            <param name="identity">The identity of the addin to remove.</param>
        </member>
        <member name="M:AgileFrame.Core.AddInManager.AbortRemoveUserAddInOnNextStart(System.String)">
            <summary>
            Prevents a user AddIn from being uninstalled.
            <see cref="M:AgileFrame.Core.AddInManager.RemoveUserAddInOnNextStart(System.String)"/> schedules the AddIn for
            deinstallation, you can unschedule it using
            <see cref="M:AgileFrame.Core.AddInManager.AbortRemoveUserAddInOnNextStart(System.String)"/>
            </summary>
            <param name="identity">The identity of which to abort the removal.</param>
        </member>
        <member name="M:AgileFrame.Core.AddInManager.AddExternalAddIns(System.Collections.Generic.IList{AgileFrame.Core.AddIn})">
            <summary>
            Adds the specified external AddIns to the list of registered external
            AddIns.
            </summary>
            <param name="addIns">
            The list of AddIns to add. (use <see cref="T:AgileFrame.Core.AddIn"/> instances
            created by <see cref="M:AgileFrame.Core.AddIn.Load(System.IO.TextReader)"/>).
            </param>
        </member>
        <member name="M:AgileFrame.Core.AddInManager.RemoveExternalAddIns(System.Collections.Generic.IList{AgileFrame.Core.AddIn})">
            <summary>
            Removes the specified external AddIns from the list of registered external
            AddIns.
            </summary>
            The list of AddIns to remove.
            (use external AddIns from the <see cref="P:AgileFrame.Core.AddInTree.AddIns"/> collection).
        </member>
        <member name="M:AgileFrame.Core.AddInManager.Enable(System.Collections.Generic.IList{AgileFrame.Core.AddIn})">
            <summary>
            Marks the specified AddIns as enabled (will take effect after
            next application restart).
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInManager.Disable(System.Collections.Generic.IList{AgileFrame.Core.AddIn})">
            <summary>
            Marks the specified AddIns as disabled (will take effect after
            next application restart).
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInManager.LoadAddInConfiguration(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Loads a configuration file.
            The 'file' from XML elements in the form "&lt;AddIn file='full path to .addin file'&gt;" will
            be added to <paramref name="addInFiles"/>, the 'addin' element from
            "&lt;Disable addin='addin identity'&gt;" will be added to <paramref name="disabledAddIns"/>,
            all other XML elements are ignored.
            </summary>
            <param name="addInFiles">File names of external AddIns are added to this collection.</param>
            <param name="disabledAddIns">Identities of disabled addins are added to this collection.</param>
        </member>
        <member name="M:AgileFrame.Core.AddInManager.SaveAddInConfiguration(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Saves the AddIn configuration in the format expected by
            <see cref="M:AgileFrame.Core.AddInManager.LoadAddInConfiguration(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})"/>.
            </summary>
            <param name="addInFiles">List of file names of external AddIns.</param>
            <param name="disabledAddIns">List of Identities of disabled addins.</param>
        </member>
        <member name="P:AgileFrame.Core.AddInManager.UserAddInPath">
            <summary>
            Gets or sets the user addin path.
            This is the path where user AddIns are installed to.
            This property is normally initialized by <see cref="M:AgileFrame.Core.CoreStartup.ConfigureUserAddIns(System.String,System.String)"/>.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.AddInManager.AddInInstallTemp">
            <summary>
            Gets or sets the addin install temporary directory.
            This is a directory used to store AddIns that should be installed on
            the next start of the application.
            This property is normally initialized by <see cref="M:AgileFrame.Core.CoreStartup.ConfigureUserAddIns(System.String,System.String)"/>.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.AddInManager.ConfigurationFileName">
            <summary>
            Gets or sets the full name of the configuration file.
            In this file, the AddInManager stores the list of disabled AddIns
            and the list of installed external AddIns.
            This property is normally initialized by <see cref="M:AgileFrame.Core.CoreStartup.ConfigureExternalAddIns(System.String)"/>.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AddInTree">
            <summary>
            Static class containing the AddInTree. Contains methods for accessing tree nodes and building items.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.ExistsTreeNode(System.String)">
            <summary>
            Checks whether the specified path exists in the AddIn tree.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.GetTreeNode(System.String)">
            <summary>
            Gets the <see cref="T:AgileFrame.Core.AddInTreeNode"/> representing the specified path.
            This method throws a <see cref="T:AgileFrame.Core.TreePathNotFoundException"/> when the
            path does not exist.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.GetTreeNode(System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:AgileFrame.Core.AddInTreeNode"/> representing the specified path.
            </summary>
            <param name="path">The path of the AddIn tree node</param>
            <param name="throwOnNotFound">
            If set to <c>true</c>, this method throws a
            <see cref="T:AgileFrame.Core.TreePathNotFoundException"/> when the path does not exist.
            If set to <c>false</c>, <c>null</c> is returned for non-existing paths.
            </param>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.BuildItem(System.String,System.Object)">
            <summary>
            Builds a single item in the addin tree.
            </summary>
            <param name="path">A path to the item in the addin tree.</param>
            <param name="caller">The owner used to create the objects.</param>
            <exception cref="T:AgileFrame.Core.TreePathNotFoundException">The path does not
            exist or does not point to an item.</exception>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.BuildItems``1(System.String,System.Object)">
            <summary>
            Builds the items in the path. Ensures that all items have the type T.
            Throws a <see cref="T:AgileFrame.Core.TreePathNotFoundException"/> if the path is not found.
            </summary>
            <param name="path">A path in the addin tree.</param>
            <param name="caller">The owner used to create the objects.</param>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.BuildItems``1(System.String,System.Object,System.Boolean)">
            <summary>
            Builds the items in the path. Ensures that all items have the type T.
            </summary>
            <param name="path">A path in the addin tree.</param>
            <param name="caller">The owner used to create the objects.</param>
            <param name="throwOnNotFound">If true, throws a <see cref="T:AgileFrame.Core.TreePathNotFoundException"/>
            if the path is not found. If false, an empty ArrayList is returned when the
            path is not found.</param>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.InsertAddIn(AgileFrame.Core.AddIn)">
            <summary>
            The specified AddIn is added to the <see cref="P:AgileFrame.Core.AddInTree.AddIns"/> collection.
            If the AddIn is enabled, its doozers, condition evaluators and extension
            paths are added to the AddInTree and its resources are added to the
            <see cref="T:AgileFrame.Core.ResourceService"/>.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.RemoveAddIn(AgileFrame.Core.AddIn)">
            <summary>
            The specified AddIn is removed to the <see cref="P:AgileFrame.Core.AddInTree.AddIns"/> collection.
            This is only possible for disabled AddIns, enabled AddIns require
            a restart of the application to be removed.
            </summary>
            <exception cref="T:System.ArgumentException">Occurs when trying to remove an enabled AddIn.</exception>
        </member>
        <member name="M:AgileFrame.Core.AddInTree.Load(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Loads a list of .addin files, ensuring that dependencies are satisfied.
            This method is normally called by <see cref="M:AgileFrame.Core.CoreStartup.RunInitialization"/>.
            </summary>
            <param name="addInFiles">
            The list of .addin file names to load.
            </param>
            <param name="disabledAddIns">
            The list of disabled AddIn identity names.
            </param>
        </member>
        <member name="P:AgileFrame.Core.AddInTree.AddIns">
            <summary>
            Gets the list of loaded AddIns.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.AddInTree.Doozers">
            <summary>
            Gets a dictionary of registered doozers.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.AddInTree.ConditionEvaluators">
            <summary>
            Gets a dictionary of registered condition evaluators.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AddInTreeNode">
            <summary>
            Represents an extension path in the <see cref="T:AgileFrame.Core.AddInTree"/>.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInTreeNode.BuildChildItems``1(System.Object)">
            <summary>
            Builds the child items in this path. Ensures that all items have the type T.
            </summary>
            <param name="caller">The owner used to create the objects.</param>
        </member>
        <member name="M:AgileFrame.Core.AddInTreeNode.BuildChildItems(System.Object)">
            <summary>
            Builds the child items in this path.
            </summary>
            <param name="caller">The owner used to create the objects.</param>
        </member>
        <member name="M:AgileFrame.Core.AddInTreeNode.BuildChildItem(System.String,System.Object,System.Collections.ArrayList)">
            <summary>
            Builds a specific child items in this path.
            </summary>
            <param name="childItemID">
            The ID of the child item to build.
            </param>
            <param name="caller">The owner used to create the objects.</param>
            <param name="subItems">The subitems to pass to the doozer</param>
            <exception cref="T:AgileFrame.Core.TreePathNotFoundException">
            Occurs when <paramref name="childItemID"/> does not exist in this path.
            </exception>
        </member>
        <member name="P:AgileFrame.Core.AddInTreeNode.ChildNodes">
            <summary>
            A dictionary containing the child paths.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.AddInTreeNode.Codons">
            <summary>
            A list of child <see cref="T:AgileFrame.Core.Codon"/>s.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AddInTreeNode.TopologicalSort">
            <summary>
            Supports sorting codons using InsertBefore/InsertAfter
            </summary>
        </member>
        <member name="P:AgileFrame.Core.AddIn.CustomErrorMessage">
            <summary>
            Gets the message of a custom load error. Used only when AddInAction is set to CustomError.
            Settings this property to a non-null value causes Enabled to be set to false and
            Action to be set to AddInAction.CustomError.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.AddIn.Action">
            <summary>
            Action to execute when the application is restarted.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AddInLoadException">
            <summary>
            Exception used when loading an AddIn fails.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.CoreException">
            <summary>
            预留
            </summary>
        </member>
        <member name="F:AgileFrame.Core.CoreException.ErrorMessage">
            <summary>
            由系统默认捕获错误时使用的友好信息，在业务层或者界面层使用。
            </summary>
        </member>
        <member name="F:AgileFrame.Core.CoreException.innerException">
            嵌入的异常对象 
        </member>
        <member name="M:AgileFrame.Core.CoreException.#ctor">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CoreException.#ctor(System.String,System.String)">
            <summary>
            自定义异常，输入友好信息以传递上层
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CoreException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            自定义异常，输入友好信息以传递上层
            </summary>
            <param name="messageStr"></param>
            <param name="detailStr"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:AgileFrame.Core.CoreException.#ctor(System.String,System.Exception)">
            <summary>
            友好信息，以及完全的内部异常现场传递至上面
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CoreException.#ctor(System.String,AgileFrame.Core.CoreException)">
            <summary>
            嵌套异常的操作方式，加入跨层的异常说明规则
            </summary>
            <param name="_friendMessage"></param>
            <param name="coreException"></param>
        </member>
        <member name="M:AgileFrame.Core.CoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CoreException.GetNestedException(System.Exception)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CoreException.IsCritical(System.Exception)">
            <summary>
            判断是否致命异常，是的话就抛出 if (IsCritical(ex)) throw;  objFailures.Add(strFile);资源文件
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.CoreException.EnhancedStackTrace(System.Exception)">
            <summary>
            使用 StackTrace 获得更多跟 Exception 有关的信息 http://blog.joycode.com/ghj/archive/2008/03/05/114925.aspx
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Core.CoreException.FriendMessage">
            <summary>
            自定义的友好信息，或自写描述信息
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CoreException.RecentFriendMessage">
            <summary>
            自定义的友好信息，或自写描述信息
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CoreException.Message">
            <summary>
            详尽的错误信息
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CoreException.IsLogged">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CoreException.UniqueID">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CoreException.InnerException">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AddInReference">
            <summary>
            Represents a versioned reference to an AddIn. Used by <see cref="T:AgileFrame.Core.AddInManifest"/>.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AddInReference.Check(System.Collections.Generic.Dictionary{System.String,System.Version},System.Version@)">
            <returns>Returns true when the reference is valid.</returns>
        </member>
        <member name="M:AgileFrame.Core.AddInReference.CompareVersion(System.Version,System.Version)">
            <summary>
            Compares two versions and ignores unspecified fields (unlike Version.CompareTo)
            </summary>
            <returns>-1 if a &lt; b, 0 if a == b, 1 if a &gt; b</returns>
        </member>
        <member name="T:AgileFrame.Core.Codon">
            <summary>
            Represents a node in the add in tree that can produce an item.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.NegatedCondition">
            <summary>
            Negates a condition
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ICondition">
            <summary>
            Interface for single condition or complex condition.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ICondition.IsValid(System.Object)">
            <summary>
            Returns true, when the condition is valid otherwise false.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.ICondition.Action">
            <summary>
            Returns the action which occurs, when this condition fails.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AndCondition">
            <summary>
            Gives back the and result of two conditions.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.OrCondition">
            <summary>
            Gives back the or result of two conditions.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Condition">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Condition.#ctor(System.String,AgileFrame.Core.Properties)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Condition.IsValid(System.Object)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Condition.Read(System.Xml.XmlReader)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Condition.ReadComplexCondition(System.Xml.XmlReader)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Condition.ReadConditionList(System.Xml.XmlReader,System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Condition.GetFailedAction(System.Collections.Generic.IEnumerable{AgileFrame.Core.ICondition},System.Object)">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Condition.Action">
            <summary>
            Returns the action which occurs, when this condition fails.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Condition.Name">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Condition.Item(System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Condition.Properties">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.CompareConditionEvaluator">
            <summary>
            Compares two strings.
            The strings are passed through the StringParser, so it is possible to compare
            SharpDevelop properties.<br/>
            Useful if you want to run a command only when a setting is active to prevent
            loading your addin if that setting isn't set.
            </summary>
            <attribute name="string">
            The first string.
            </attribute>
            <attribute name="equals">
            The second string.
            </attribute>
            <attribute name="comparisonType">
            The mode of the comparison: a field of the System.StringComparison enumeration. The default is
            'InvariantCultureIgnoreCase'.
            </attribute>
            <example title="Check the value of a property in the PropertyService">
            &lt;Condition name = "Compare" string = "${property:SharpDevelop.FiletypesRegisterStartup}" equals = "True"&gt;
            </example>
        </member>
        <member name="T:AgileFrame.Core.IConditionEvaluator">
            <summary>
            Interface for classes that can evaluate conditions defined in the addin tree.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.LazyConditionEvaluator">
            <summary>
            Condition evaluator that lazy-loads another condition evaluator and executes it.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.OwnerStateConditionEvaluator">
            <summary>
            Condition evaluator that compares the state of the caller/owner with a specified value.
            The caller/owner has to implement <see cref="T:AgileFrame.Core.IOwnerState"/>.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ClassDoozer">
            <summary>
            Creates object instances by invocating a type's parameterless constructor
            via System.Reflection.
            </summary>
            <attribute name="class" use="required">
            The fully qualified type name of the class to create an instace of.
            </attribute>
            <usage>Everywhere where objects are expected.</usage>
            <returns>
            Any kind of object.
            </returns>
        </member>
        <member name="T:AgileFrame.Core.IDoozer">
            <summary>
            Interface for classes that can build objects out of codons.
            </summary>
            <remarks>http://en.wikipedia.org/wiki/Fraggle_Rock#Doozers</remarks>
        </member>
        <member name="M:AgileFrame.Core.IDoozer.BuildItem(System.Object,AgileFrame.Core.Codon,System.Collections.ArrayList)">
            <summary>
            Construct the item.
            </summary>
            <param name="caller">The caller passed to <see cref="M:AgileFrame.Core.AddInTree.BuildItem(System.String,System.Object)"/>.</param>
            <param name="codon">The codon to build.</param>
            <param name="subItems">The list of objects created by (other) doozers for the sub items.</param>
            <returns>The constructed item.</returns>
        </member>
        <member name="P:AgileFrame.Core.IDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.ClassDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.FileFilterDoozer">
            <summary>
            Creates file filter entries for OpenFileDialogs or SaveFileDialogs.
            </summary>
            <attribute name="name" use="required">
            The name of the file filter entry.
            </attribute>
            <attribute name="extensions" use="required">
            The extensions associated with this file filter entry.
            </attribute>
            <usage>Only in /SharpDevelop/Workbench/FileFilter</usage>
            <returns>
            String in the format "name|extensions".
            </returns>
        </member>
        <member name="P:AgileFrame.Core.FileFilterDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.IconDoozer">
            <summary>
            Creates associations between file types or node types in the project browser and
            icons in the resource service.
            </summary>
            <attribute name="resource" use="required">
            The name of a bitmap resource in the resource service.
            </attribute>
            <attribute name="language">
            This attribute is specified when a project icon association should be created.
            It specifies the language of the project types that use the icon.
            </attribute>
            <attribute name="extensions">
            This attribute is specified when a file icon association should be created.
            It specifies the semicolon-separated list of file types that use the icon.
            </attribute>
            <usage>Only in /Workspace/Icons</usage>
            <returns>
            An IconDescriptor object that exposes the attributes.
            </returns>
        </member>
        <member name="P:AgileFrame.Core.IconDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.IncludeDoozer">
            <summary>
            Includes one or multiple items from another location in the addin tree.
            You can use the attribute "item" (to include a single item) OR the
            attribute "path" (to include all items from the target path).
            </summary>
            <attribute name="item">
            When this attribute is used, the include doozer builds the item that is at the
            addin tree location specified by this attribute.
            </attribute>
            <attribute name="path">
            When this attribute is used, the include doozer builds all items inside the
            path addin tree location specified by this attribute and returns an
            <see cref="T:AgileFrame.Core.IBuildItemsModifier"/> which includes all items in the output list.
            </attribute>
            <usage>Everywhere</usage>
            <returns>
            Any object, depending on the included codon(s).
            </returns>
        </member>
        <member name="M:AgileFrame.Core.IncludeDoozer.BuildItem(System.Object,AgileFrame.Core.Codon,System.Collections.ArrayList)">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.IncludeDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.IBuildItemsModifier">
            <summary>
            When a <see cref="T:AgileFrame.Core.IDoozer">doozer</see> returns an object implementing
            this interface, the <see cref="M:AgileFrame.Core.IBuildItemsModifier.Apply(System.Collections.IList)"/> method is called on the list of items
            that has been built.
            This interface can be used to support special <see cref="T:AgileFrame.Core.IDoozer">doozers</see>
            that do not simply build one item but want to modify the list of items built so far.
            Example use is the <see cref="T:AgileFrame.Core.IncludeDoozer"/> which uses this interface to return
            multiple items instead of one.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.IBuildItemsModifier.Apply(System.Collections.IList)">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.LazyLoadDoozer">
            <summary>
            This doozer lazy-loads another doozer when it has to build an item.
            It is used internally to wrap doozers specified in addins.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.LazyLoadDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AbstractCommand">
            <summary>
            Abstract implementation of the <see cref="T:AgileFrame.Core.ICommand"/> interface.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ICommand">
            <summary>
            A basic command interface. A command has simply an owner which "runs" the command
            and a Run method which invokes the command.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ICommand.Run">
            <summary>
            Invokes the command.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.ICommand.Owner">
            <summary>
            Returns the owner of the command.
            </summary>
        </member>
        <member name="E:AgileFrame.Core.ICommand.OwnerChanged">
            <summary>
            Is called when the Owner property is changed.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AbstractCommand.Run">
            <summary>
            Invokes the command.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.AbstractCommand.Owner">
            <summary>
            Returns the owner of the command.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MenuItemDoozer">
            <summary>
            Creates menu items from a location in the addin tree.
            </summary>
            <attribute name="label" use="required">
            Label of the menu item.
            </attribute>
            <attribute name="type" use="optional" enum="Separator;CheckBox;Item;Command;Menu;Builder">
            This attribute must be one of these values:
            Separator, CheckBox, Item=Command, Menu (=with subitems),
            Builder (=class implementing ISubmenuBuilder).
            Default: Command.
            </attribute>
            <attribute name="loadclasslazy" use="optional">
            Only for the type "Item"/"Command".
            When set to false, the command class is loaded
            immediately instead of the usual lazy-loading.
            </attribute>
            <attribute name="icon" use="optional">
            Icon of the menu item.
            </attribute>
            <attribute name="class" use="optional">
            Command class that is run when item is clicked.
            </attribute>
            <attribute name="link" use="optional">
            Only for the type "Item"/"Command". Opens a webpage instead of running a command when
            clicking the item.
            </attribute>
            <attribute name="shortcut" use="optional">
            Shortcut that activates the command (e.g. "Control|S").
            </attribute>
            <children childTypes="MenuItem">
            If "type" is "Menu", the item can have sub-menuitems.
            </children>
            <usage>Any menu strip paths or context menu paths, e.g. /SharpDevelop/Workbench/MainMenu</usage>
            <returns>
            A MenuItemDescriptor object.
            </returns>
            <conditions>Conditions are handled by the item, "Exclude" maps to "Visible = false", "Disable" to "Enabled = false"</conditions>
        </member>
        <member name="P:AgileFrame.Core.MenuItemDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MenuItemDescriptor">
            <summary>
            Represents a menu item. These objects are created by the MenuItemDoozer and
            then converted into GUI-toolkit-specific objects by the MenuService.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.StringDoozer">
            <summary>
            Creates a string.
            </summary>
            <attribute name="text" use="required">
            The string to return.
            </attribute>
            <returns>
            The string specified by 'text', passed through the StringParser.
            </returns>
        </member>
        <member name="P:AgileFrame.Core.StringDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.IComboBoxCommand">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ITextBoxCommand">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ToolbarItemDoozer">
            <summary>
            Creates tool bar items from a location in the addin tree.
            </summary>
            <attribute name="label" use="optional">
            Label of the tool bar item.
            </attribute>
            <attribute name="icon" use="optional">
            Icon of the tool bar item.
            </attribute>
            <attribute name="type" use="optional" enum="Separator;CheckBox;Item;ComboBox;DropDownButton">
            This attribute must be one of these values:
            Separator, CheckBox, Item, ComboBox, DropDownButton
            </attribute>
            <attribute name="loadclasslazy" use="optional">
            Only for the type "Item". When set to false, the command class is loaded
            immediately instead of the usual lazy-loading.
            </attribute>
            <attribute name="tooltip" use="optional">
            Tooltip of the tool bar item.
            </attribute>
            <attribute name="class">
            Command class that is run when item is clicked; or class that manages
            the ComboBox/DropDownButton. Required for everything except "Separator".
            </attribute>
            <usage>Any toolbar strip paths, e.g. /SharpDevelop/Workbench/ToolBar</usage>
            <children childTypes="MenuItem">A drop down button has menu items as sub elements.</children>
            <returns>
            A ToolStrip* object, depending on the type attribute.
            </returns>
            <conditions>Conditions are handled by the item, "Exclude" maps to "Visible = false", "Disable" to "Enabled = false"</conditions>
        </member>
        <member name="P:AgileFrame.Core.ToolbarItemDoozer.HandleConditions">
            <summary>
            Gets if the doozer handles codon conditions on its own.
            If this property return false, the item is excluded when the condition is not met.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ToolbarItemDescriptor">
            <summary>
            Represents a toolbar item. These objects are created by the ToolbarItemDoozer and
            then converted into GUI-toolkit-specific objects by the ToolbarService.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ExtensionPath">
            <summary>
            Description of Path.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ConditionFailedAction">
            <summary>
            Default actions, when a condition is failed.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AddInManifest">
            <summary>
            Stores information about the manifest of an AddIn.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Runtime_Tree.Load">
            <summary>
            Force loading the runtime assembly now.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.CoreStartup">
            <summary>
            Class that helps starting up AgileFrame.Core.
            </summary>
            <remarks>
            Initializing AgileFrame.Core requires initializing several static classes
            and the <see cref="T:AgileFrame.Core.AddInTree"/>. <see cref="T:AgileFrame.Core.CoreStartup"/> does this work
            for you, provided you use it like this:
            1. Create a new CoreStartup instance
            2. (Optional) Set the values of the properties.
            3. Call <see cref="M:AgileFrame.Core.CoreStartup.StartCoreServices"/>.
            4. Add "preinstalled" AddIns using <see cref="M:AgileFrame.Core.CoreStartup.AddAddInsFromDirectory(System.String)"/>
               and <see cref="M:AgileFrame.Core.CoreStartup.AddAddInFile(System.String)"/>.
            5. (Optional) Call <see cref="M:AgileFrame.Core.CoreStartup.ConfigureExternalAddIns(System.String)"/> to support
               disabling AddIns and installing external AddIns
            6. (Optional) Call <see cref="M:AgileFrame.Core.CoreStartup.ConfigureUserAddIns(System.String,System.String)"/> to support installing
               user AddIns.
            7. Call <see cref="M:AgileFrame.Core.CoreStartup.RunInitialization"/>.
            </remarks>
        </member>
        <member name="M:AgileFrame.Core.CoreStartup.#ctor(System.String)">
            <summary>
            Creates a new CoreStartup instance.
            </summary>
            <param name="applicationName">
            The name of your application.
            This is used as default title for message boxes,
            default name for the configuration directory etc.
            </param>
        </member>
        <member name="M:AgileFrame.Core.CoreStartup.AddAddInsFromDirectory(System.String)">
            <summary>
            Find AddIns by searching all .addin files recursively in <paramref name="addInDir"/>.
            The found AddIns are added to the list of AddIn files to load.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CoreStartup.AddAddInFile(System.String)">
            <summary>
            Add the specified .addin file to the list of AddIn files to load.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CoreStartup.ConfigureExternalAddIns(System.String)">
            <summary>
            Use the specified configuration file to store information about
            disabled AddIns and external AddIns.
            You have to call this method to support the <see cref="T:AgileFrame.Core.AddInManager"/>.
            </summary>
            <param name="addInConfigurationFile">
            The name of the file used to store the list of disabled AddIns
            and the list of installed external AddIns.
            A good value for this parameter would be
            <c>Path.Combine(<see cref="P:AgileFrame.Core.PropertyService.ConfigDirectory"/>, "AddIns.xml")</c>.
            </param>
        </member>
        <member name="M:AgileFrame.Core.CoreStartup.ConfigureUserAddIns(System.String,System.String)">
            <summary>
            Configures user AddIn support.
            </summary>
            <param name="addInInstallTemp">
            The AddIn installation temporary directory.
            ConfigureUserAddIns will install the AddIns from this directory and
            store the parameter value in <see cref="P:AgileFrame.Core.AddInManager.AddInInstallTemp"/>.
            </param>
            <param name="userAddInPath">
            The path where user AddIns are installed to.
            AddIns from this directory will be loaded.
            </param>
        </member>
        <member name="M:AgileFrame.Core.CoreStartup.RunInitialization">
            <summary>
            Initializes the AddIn system.
            This loads the AddIns that were added to the list,
            then it executes the <see cref="T:AgileFrame.Core.ICommand">commands</see>
            in <c>/Workspace/Autostart</c>.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CoreStartup.StartCoreServices">
            <summary>
            Starts the core services.
            This initializes the PropertyService and ResourceService.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CoreStartup.PropertiesName">
            <summary>
            Sets the name used for the properties (only name, without path or extension).
            Must be set before StartCoreServices() is called.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CoreStartup.ConfigDirectory">
            <summary>
            Sets the directory name used for the property service.
            Must be set before StartCoreServices() is called.
            Use null to use the default path "%ApplicationData%\%ApplicationName%",
            where %ApplicationData% is the system setting for
            "c:\documents and settings\username\application data"
            and %ApplicationName% is the application name you used in the
            CoreStartup constructor call.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CoreStartup.DataDirectory">
            <summary>
            Sets the data directory used to load resources.
            Must be set before StartCoreServices() is called.
            Use null to use the default path "ApplicationRootPath\data".
            </summary>
        </member>
        <member name="T:AgileFrame.Core.TreePathNotFoundException">
            <summary>
            Is thrown when the AddInTree could not find the requested path.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.TreePathNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new <see cref="T:AgileFrame.Core.TreePathNotFoundException"/>
            </summary>
        </member>
        <member name="M:AgileFrame.Core.TreePathNotFoundException.#ctor">
            <summary>
            Constructs a new <see cref="T:AgileFrame.Core.TreePathNotFoundException"/>
            </summary>
        </member>
        <member name="M:AgileFrame.Core.TreePathNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new <see cref="T:AgileFrame.Core.TreePathNotFoundException"/>
            </summary>
        </member>
        <member name="M:AgileFrame.Core.TreePathNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserializes a <see cref="T:AgileFrame.Core.TreePathNotFoundException"/>
            </summary>
        </member>
        <member name="T:AgileFrame.Core.IMementoCapable">
            <summary>
            This interface flags an object beeing "mementocapable". This means that the
            state of the object could be saved to an <see cref="T:AgileFrame.Core.Properties"/> object
            and set from a object from the same class.
            This is used to save and restore the state of GUI objects.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.IMementoCapable.CreateMemento">
            <summary>
            Creates a new memento from the state.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.IMementoCapable.SetMemento(AgileFrame.Core.Properties)">
            <summary>
            Sets the state to the given memento.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Properties">
            <summary>
            Description of PropertyGroup.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.Get(System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.Set``1(System.String,``0)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.Contains(System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.Remove(System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.ToString">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.ReadFromAttributes(System.Xml.XmlReader)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.WriteProperties(System.Xml.XmlWriter)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.Save(System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.Load(System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.Get``1(System.String,``0)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Properties.OnPropertyChanged(AgileFrame.Core.PropertyChangedEventArgs)">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Properties.Item(System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Properties.Elements">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Properties.Count">
            <summary>
            预留
            </summary>
        </member>
        <member name="E:AgileFrame.Core.Properties.PropertyChanged">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Properties.SerializedValue">
            <summary> Needed for support of late deserialization </summary>
        </member>
        <member name="P:AgileFrame.Core.PropertyChangedEventArgs.Properties">
            <returns>
            returns the changed property object
            </returns>
        </member>
        <member name="P:AgileFrame.Core.PropertyChangedEventArgs.Key">
            <returns>
            The key of the changed property
            </returns>
        </member>
        <member name="P:AgileFrame.Core.PropertyChangedEventArgs.NewValue">
            <returns>
            The new value of the property
            </returns>
        </member>
        <member name="P:AgileFrame.Core.PropertyChangedEventArgs.OldValue">
            <returns>
            The new value of the property
            </returns>
        </member>
        <member name="T:AgileFrame.Core.DebugTextWriter">
            <summary>
            TextWriter that writes into System.Diagnostics.Debug
            </summary>
        </member>
        <member name="T:AgileFrame.Core.BlockInfo">
            <summary>
            字符块
            </summary>
        </member>
        <member name="F:AgileFrame.Core.BlockInfo.start">
            <summary>
            起始标记
            </summary>
        </member>
        <member name="F:AgileFrame.Core.BlockInfo.end">
            <summary>
            结束标记
            </summary>
        </member>
        <member name="F:AgileFrame.Core.BlockInfo.append">
            <summary>
            替换后追加
            </summary>
        </member>
        <member name="T:AgileFrame.Core.StringHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.FilterBlock(System.String,AgileFrame.Core.BlockInfo[],System.Int32[])">
            <summary>
            过滤字符块
            </summary>
            <param name="str">目标字符串</param>
            <param name="blockInfos">字符块信息</param>
            <param name="filter">过滤留下的区块</param>
            <returns>返回被过后的字符串</returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsNumeric(System.String)">
            <summary>
            判断是否为数值
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsDate(System.String)">
            <summary>
            是否为日期型字符串，日期字符串(2008-05-08)或(20080508)
            </summary>
            <param name="StrSource">日期字符串(2008-05-08)或(20080508)</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsTime(System.String)">
            <summary>
            是否为时间型字符串
            </summary>
            <param name="source">时间字符串(15:00:00)</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsDateTime(System.String)">
            <summary>
            是否为日期+时间型字符串
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.Contains(System.String)">
            <summary>
             判断一个字符串中包含几个字母,几个数字,几个标点
            </summary>
            <param name="org"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.Contains(System.String,System.String)">
            <summary>
            怎么判断某个字符串里是否包含下面字符串中其中一个txt;*.doc;*.xls;*.docx;*.xlsx;*.rar;*.zip;
            pattern = @"txt|doc|xls|docx|xlsx|rar|zip";
            </summary>
            <param name="org"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsClassNameValid(System.String,System.String@)">
            <summary>
            是否有效类名，并进行过滤 汉字与字母
            </summary>
            <param name="text"></param>
            <param name="newText"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsFileNameValid(System.String,System.String@)">
            <summary>
            是否有效文件名，并进行过滤
            </summary>
            <param name="name"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsFileNameValid(System.String)">
            <summary>
            是否有效文件名，并进行过滤
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ToString(System.String[])">
            <summary>
            输入参数 需要是行
            </summary>
            <param name="lines"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.DecodeWithString(System.String,System.String)">
            <summary>
            使用   FromBase64String   方法对以   UUencode（基   64）编码的数据进行解码并将它保存为二进制输出
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.Convert10To64(System.Int32)">
            <summary>
            10to64   和64to10的转换  x ==int or long  x = 84096;
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.Convert64To10(System.String)">
            <summary>
            10to64   和64to10的转换
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.fnConvertToBig(System.String)">
            <summary>
            将小写金额转化为大写 精度不高到亿; 3000 结果：叁元整
            </summary>
            <param name="MoneyValue"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.GetNumericLianXu(System.String)">
            <summary>
            获得数字
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.GetNumeric(System.String)">
            <summary>
            获得数字
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.GetHanZi(System.String)">
            <summary>
            获得汉字
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.GetHanZiStart(System.String)">
            <summary>
            获得第一个汉字开头的所有后面的字符
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.GetHanZiLianXu(System.String)">
            <summary>
            获得第一个汉字开头的连续汉字字符
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsHanZi(System.String)">
            <summary>
            是否存在汉字
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IndexCode(System.String)">
            <summary>
            返回给定字符串的首字母 获取字符串中的汉字拼音首字母
            </summary>
            <param name="IndexTxt"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.UTF8ToGb2312(System.String)">
            <summary>
            NET中内存中的字符串都是Unicode.UTF-8 转 GB2312 系统默认语言是中文，我们的操作
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.GetCenterString(System.String,System.String,System.String)">
            <summary>
            获得oldText中，以beginStr开始，以endStr结尾的字符串，不包含beginStr与endStr。如果endStr==""，则返回beginStr开头的字符串
            </summary>
            <param name="oldText"></param>
            <param name="beginStr"></param>
            <param name="endStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.SplitByChar(System.String,System.Char,System.Int32)">
            <summary>
            分割字符串
            </summary>
            <param name="src"></param>
            <param name="schar"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.Split(System.String,System.String)">
            <summary>
            正则表达式效率较低
            </summary>
            <param name="orgStr"></param>
            <param name="spliteStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IsNumericByExpr(System.String)">
            <summary>
            判断是否为数值
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ReplaceEx(System.String,System.String,System.String,System.Boolean)">
            <summary>
            以下介绍一种算法，类似KMP算法。有兴趣的参照研究下。
            </summary>
            <param name="original"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ReplaceNonCase_Old(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ContainsCount(System.String,System.String)">
            <summary>
            计算A字符串包含B字符串的数量
            </summary>
            <param name="original"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ReplaceOnce(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="original"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ReplaceNonCase2008(System.String,System.Text.StringBuilder,System.Text.StringBuilder)">
            <summary>
            ==效率低于正则表达式.
            </summary>
            <param name="original"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ReplaceNonCase(System.String,System.String,System.String)">
            <summary>
            ==VBString. Strings 效率是 正则表达式的两倍
            </summary>
            <param name="original"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ReplaceNonCaseForAll(System.String,System.String,System.String)">
            <summary>
            ==VBString. Strings 效率是 正则表达式的两倍
            </summary>
            <param name="original"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IndexOf(System.String,System.String)">
            <summary>
            需除去正则表达式保留字
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ReplaceNonCase2009(System.String,System.String,System.String)">
            <summary>
            正则表达式
            </summary>
            <param name="original"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.IndexOf(System.String,System.String,System.Int32)">
            <summary>
            //--T是比较大的字符串，P是比较小的字符串,i是检索的位置---T是原始数据，p则是搜索的字符串
            </summary>
            <param name="T"></param>
            <param name="P"></param>
            <param name="i"></param>
            <returns></returns>        
        </member>
        <member name="M:AgileFrame.Core.StringHelper.HeadUpper(System.String)">
            <summary>
            首字母大写，其他小写
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.CutString(System.String,System.Int32)">
            <summary>
            根据连个字符串截取字符串
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.CutStringForTitle(System.String,System.Int32)">
            <summary>
            汉字按长度1计算，字母和符号按长度0.5计算。
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.TreeLevel(System.Int32)">
            <summary>
            树等级
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.JsonTree(System.String)">
            <summary>
            JSON字符串格式化
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.CutString(System.String,System.String,System.String)">
            <summary>
            根据连个字符串截取字符串
            </summary>
            <param name="str">初始字符串</param>
            <param name="beginStr"></param>
            <param name="endStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.CutString(System.String,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            根据连个字符串截取字符串，并返回位置
            </summary>
            <param name="str">初始字符串</param>
            <param name="beginStr"></param>
            <param name="endStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.CutStringForAll(System.String,System.String,System.String,System.Collections.Generic.List{System.Int32}@,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            根据连个字符串截取所有匹配的字符串
            </summary>
            <param name="str">初始字符串</param>
            <param name="beginStr"></param>
            <param name="endStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.CutOutString(System.String,System.String,System.String)">
            <summary>
            根据连个字符串去除字符串，请注意:开始字符串不区分大小写；结束字符串区分大小写
            </summary>
            <param name="str">初始字符串</param>
            <param name="beginStr"></param>
            <param name="endStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.CutOutStringWithReplace(System.String,System.String,System.String,System.String)">
            <summary>
            根据连个字符串去除字符串，并用分隔符替代，请注意:开始字符串不区分大小写；结束字符串区分大小写
            </summary>
            <param name="str"></param>
            <param name="beginStr"></param>
            <param name="endStr"></param>
            <param name="replaceStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.CutOutStringWithReplace(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根据连个字符串去除字符串，并用新的头尾符替换，请注意:开始字符串不区分大小写；结束字符串区分大小写
            </summary>
            <param name="str"></param>
            <param name="beginStr"></param>
            <param name="endStr"></param>
            <param name="replaceBeginStr"></param>
            <param name="replaceEndStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.FilterRegex(System.String@)">
            <summary>
            正则中需要转义的特殊字符小结
            </summary>
            <param name="str1"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.SplitFor1(System.String,System.Char)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.SplitFor2(System.String,System.Char)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.GetStringArray(System.String,System.Char)">
            <summary>
            根据一个字符拆分字符串得到一个字符串数组
            </summary>
            <param name="splitstr">被拆分的字符串</param>
            <param name="splitchr">分隔字符，用于拆分</param>
            <returns>字符串数组</returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.HadStrFromString(System.String,System.String,System.Char)">
            <summary>
            在一个以特定字符隔开的字符串里检查是否存在另一个字符串，即检查checkstr是否包含在str字符串里
            </summary>
            <param name="str">带特定字符的字符串</param>
            <param name="checkstr">要检查的字符串</param>
            <param name="chr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.RemoveFromString(System.String,System.String,System.Char)">
            <summary>
            从一个以指定字符chr隔开的字符串str里删除等于字符串movewstr的字符串
            </summary>
            <param name="douhaostr">原来字符串</param>
            <param name="movestr">要删除的字符串</param>
            <returns>返回删除后的字符串</returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.GetWeekName(System.DayOfWeek)">
            <summary>
            获取星期名称
            </summary>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.StringHelper.ReplaceHtmlTag2(System.String)">
            <summary>
            移除html标签
            </summary>
            <param name="Htmlstring"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.ReplaceHtml">
            <summary>
            http://www.cnblogs.com/bruceleeliya/archive/2009/06/23/1509520.html
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ReplaceHtml.ReplaceHtmlTag(System.String)">
            <summary>去除Html标签 </summary>
        </member>
        <member name="M:AgileFrame.Core.ReplaceHtml.SetInstance(AgileFrame.Core.ReplaceHtml)">
            <summary>设置ReplaceHtml的Regex对象 </summary>
        </member>
        <member name="M:AgileFrame.Core.ReplaceHtml.AddRegex(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            增加一个Regex对象
            </summary>
            <param name="aRegex">Regex 对象</param>
            <param name="Replacement">该对象对应的替换字符串</param>
        </member>
        <member name="T:AgileFrame.Core.AFDictionary`2">
             <summary>
             微软提供 ReaderWriterLockSlim 
             很多方法都可以用
            1)如果是.net >= 3.5，用ReaderWriterLockSlim。ReaderWriterLockSlim和ReaderWriterLock功能一样，但功能和性能会稍好一些。
            2)如果是.net 低于 3.5，用ReaderWriterLock。
            3)我推荐你直接用lock，不用管read和write。你大概会觉得意外，但直接用lock，简单、可靠、易维护、效率高，满足大多数的应用需求。你可以做个压力测试(不是性能测试)，我敢说你看不出任何性能差异。
            lock本身的开销极小，小到你几乎可以忽略不计。lock带来的问题只是如果你的cache粒度很大(整个系统只有一个cache)，同时读action的开销又很大(10ms以上)，那么并发线程会出现排队现象(但排队不等于性能降低，更不等于服务器吞吐量下降，只是并发数下降而已)。
            而如果这个真的成为问题，也不难解决，降低cache粒度就好了。把只读cache和偶尔需要更新的cache分开来，再把需要更新的cache分区(按模块分成多个实例)就好了。
            如果再有问题，就把排队问题非常非常非常严重的部分cache用ReaderWriterLock重写就好了。
             </summary>
             <typeparam name="TKey"></typeparam>
             <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.Common.HighResolutionTimer">
            <summary>
            高精度与性能计时器。important to measure code execution time.
            System.Environment.TickCount is not suitable for high resolution timing. Its resolution cannot be less than 500 milliseconds. 
            </summary>
        </member>
        <member name="M:AgileFrame.Orm.PersistenceLayer.DAL.Common.MultiThread.DoThread(System.Threading.ThreadStart,System.Boolean@,System.Int32)">
            <summary>
            异步执行，且设置过期时间为timeOutLength毫秒；适用于快速返回通讯状态检测，如 数据库连接
            </summary>
            <param name="threadStart"></param>
            <param name="IsBuilding"></param>
            <param name="timeOutLength"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.InterProcessComm.IChannelManager">
            <summary>
            Interface, which defines methods for a Channel Manager class.
            </summary>
            <remarks>
            A Channel Manager is responsible for creating and maintaining channels for inter-process communication. The opened channels are meant to be reusable for performance optimization. Each channel needs to procees requests by calling the <see cref="M:AgileFrame.InterProcessComm.IChannelManager.HandleRequest(System.String)">HandleRequest</see> method of the Channel Manager.
            </remarks>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IChannelManager.Initialize">
            <summary>
            Initializes the Channel Manager.
            </summary>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IChannelManager.Stop">
            <summary>
            Closes all opened channels and stops the Channel Manager.
            </summary>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IChannelManager.HandleRequest(System.String)">
            <summary>
            Handles a request.
            </summary>
            <remarks>
            This method currently caters for text based requests. XML strings can be used in case complex request structures are needed.
            </remarks>
            <param name="request">The incoming request.</param>
            <returns>The resulting response.</returns>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IChannelManager.WakeUp">
            <summary>
            Forces the Channel Manager to exit a sleeping mode and create a new channel.
            </summary>
            <remarks>
            Normally the Channel Manager will create a number of reusable channels, which will handle the incoming reqiests, and go into a sleeping mode. However if the request load is high, the Channel Manager needs to be asked to create additional channels.
            </remarks>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IChannelManager.RemoveServerChannel(System.Object)">
            <summary>
            Removes an existing channel.
            </summary>
            <param name="param">A parameter identifying the channel.</param>
        </member>
        <member name="P:AgileFrame.InterProcessComm.IChannelManager.Listen">
            <summary>
            Indicates whether the Channel Manager is in listening mode.
            </summary>
            <remarks>
            This property is left public so that other classes, like a server channel can start or stop listening based on the Channel Manager mode.
            </remarks>
        </member>
        <member name="T:AgileFrame.InterProcessComm.IClientChannel">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IClientChannel.HandleRequest(System.String)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IClientChannel.HandleRequest(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IClientChannel.HandleRequest(System.Object)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.InterProcessComm.IClientChannel.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.InterProcessComm.InterProcessConnectionState">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.NotSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Creating">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Created">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.WaitingForClient">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.ConnectedToClient">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.ConnectingToServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.ConnectedToServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Reading">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.ReadData">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Writing">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.WroteData">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Flushing">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.FlushedData">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Disconnecting">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Disconnected">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Closing">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.InterProcessComm.InterProcessConnectionState.Closed">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.MyPipeOfConsole.CloseConsoleServer">
            <summary>
            关闭控制台
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.NamedPipes.MyPipeOfConsole.SendRequest(System.Object)">
            <summary>   
            发送指令。不带颜色的对象传递，可以传递控制指令，比如 当传递"close"的时候，关闭控制台
            </summary>   
            <param name="request">发送命令</param>   
            <returns>返回数据</returns>   
        </member>
        <member name="M:AgileFrame.NamedPipes.MyPipeOfConsole.SendRequest(System.ConsoleColor,System.Object)">
            <summary>   
            测试namepiped客户端   
            </summary>   
            <param name="request">发送命令</param>   
            <returns>返回数据</returns>   
        </member>
        <member name="M:AgileFrame.NamedPipes.MyPipeOfConsole.SendRequest(System.ConsoleColor,System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.NamedPipes.PipeHandle">
            <summary>
            Holds the operating system native handle and the current state of the pipe connection.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.PipeHandle.Handle">
            <summary>
            The operating system native handle.
            </summary>
        </member>
        <member name="F:AgileFrame.NamedPipes.PipeHandle.State">
            <summary>
            The current state of the pipe connection.
            </summary>
        </member>
        <member name="M:AgileFrame.NamedPipes.PipeHandle.#ctor(System.Int32)">
            <summary>
            Creates a PipeHandle instance using the passed native handle.
            </summary>
            <param name="hnd">The native handle.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.PipeHandle.#ctor(System.Int32,AgileFrame.InterProcessComm.InterProcessConnectionState)">
            <summary>
            Creates a PipeHandle instance using the provided native handle and state.
            </summary>
            <param name="hnd">The native handle.</param>
            <param name="state">The state of the pipe connection.</param>
        </member>
        <member name="M:AgileFrame.NamedPipes.PipeHandle.#ctor">
            <summary>
            Creates a PipeHandle instance with an invalid native handle.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AOP.Aop">
            <summary>
            Aop 框架.   采用DynamicProxy（动态代理）实现
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AOP.Aop.Create``1(AgileFrame.Core.AOP.AspectAttribute)">
            <summary>
            
            </summary>
            <typeparam name="MyClass"></typeparam>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.AopService.AopProxyAttribute">
            <summary>
            3. AopProxyAttribute AOP代理特性
            </summary>
            <summary>
            AopProxyAttribute 
            AOP代理特性，如果一个类想实现具体的AOP，只要实现AopProxyBase和IAopProxyFactory，然后加上该特性即可。
            2005.04.11 
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AopService.AopProxyAttribute.CreateInstance(System.Type)">
            <summary>
            获得目标对象的自定义透明代理
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AopService.AopProxyBase">
            <summary>
            AopProxyBase 所有自定义AOP代理类都从此类派生，覆写IAopOperator接口，实现具体的前/后处理
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AopService.IAopOperator">
            <summary>
            IAopOperator AOP操作符接口，包括前处理和后处理  IMessage是windows定义的消息封装
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AopService.AopProxyBase.target">
            <summary>
            这是需要被aop的对象
            </summary>
        </member>
        <member name="M:AgileFrame.Core.AopService.AopProxyBase.#ctor(System.MarshalByRefObject,System.Type)">
            <summary>
            将要被aop的对象传入aop容器，然后调用 Invoke调用目标方法。
            </summary>
            <param name="obj"></param>
            <param name="type"></param>
        </member>
        <member name="T:AgileFrame.Core.AopService.IAopProxyFactory">
            <summary>
            IAopProxyFactory 用于创建特定的Aop代理的实例，IAopProxyFactory的作用是使AopProxyAttribute独立于具体的AOP代理类。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AopService.Program1">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AopService.MyInterface">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AopService.MyClass">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AopService.DynamicProxyBuilder">
            <summary>
            基于接口的 AOP 实现
            </summary>
        </member>
        <member name="F:AgileFrame.Core.AopService.DynamicProxyBuilder.typeList">
            这里用到了多个自定义的函数和变量。其中typeList是一个保存了所有动态类型的键-值对：
        </member>
        <member name="M:AgileFrame.Core.AopService.DynamicProxyBuilder.GetProxyObject``2">
            <summary>
            获得接口类型
            </summary>
            <typeparam name="InterfaceType"></typeparam>
            <typeparam name="BaseType"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.AopService.DynamicProxyBuilder.GetProxyType(System.Type,System.Type)">
            <summary>
            获得代理类型
            </summary>
            <param name="interfaceType"></param>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:AgileFrame.Core.AopService.DynamicProxyBuilder.CreateCtor(System.Type,System.Reflection.Emit.TypeBuilder,System.Reflection.Emit.FieldBuilder)”忽略有格式错误的 XML 注释 -->
        <member name="M:AgileFrame.Core.AopService.DynamicProxyBuilder.CreateMethod(System.Type,System.Reflection.Emit.TypeBuilder,System.Reflection.MethodInfo,System.Reflection.Emit.FieldBuilder)">
            <summary>
            动态调用方法
            </summary>
            <param name="baseType"></param>
            <param name="tb"></param>
            <param name="method"></param>
            <param name="fb"></param>
        </member>
        <member name="T:AgileFrame.Core.AopService.MethodAopSwitcherAttribute">
            <summary>
            MethodAopSwitcherAttribute 用于决定一个被AopProxyAttribute修饰的class的某个特定方法是否启用截获 。
            创建原因：绝大多数时候我们只希望对某个类的一部分Method而不是所有Method使用截获。
            使用方法：如果一个方法没有使用MethodAopSwitcherAttribute特性或使用MethodAopSwitcherAttribute(false)修饰，
            都不会对其进行截获。只对使用了MethodAopSwitcherAttribute(true)启用截获。
            2005.05.11
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AOP.reflectorClass1">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.ChinaDateTime">
            
            <summary>
            中国常用农历日期时间类
            zj53hao@qq.com   http://hi.csdn.net/zj53hao
            </summary>
        </member>
        <member name="M:System.ChinaDateTime.ToStringForNow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.ChinaDateTime.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.ChinaDateTime.#ctor(System.DateTime)">
            
            <summary>
            返回指定公历日期的阴历时间
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:System.ChinaDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            
            <summary>
            返回指定农历年，月，日，是否为闰月的农历日期时间
            </summary>
            <param name="Year"></param>
            <param name="Month"></param>
            <param name="DayOfMonth"></param>
            <param name="IsLeap"></param>
        </member>
        <member name="M:System.ChinaDateTime.ToDateTime">
            
            <summary>
            获取当前农历日期的公历时间
            </summary>
        </member>
        <member name="M:System.ChinaDateTime.ToDateTime(System.ChinaDateTime)">
            
            <summary>
            获取指定农历时间对应的公历时间
            </summary>
            <param name="CnTime"></param>
            <returns></returns>
        </member>
        <member name="M:System.ChinaDateTime.ToChinaDateTime(System.DateTime)">
            
            <summary>
            获取指定公历时间转换为农历时间
            </summary>
            <param name="Time"></param>
            <returns></returns>
        </member>
        <member name="P:System.ChinaDateTime.Year">
            
            <summary>
            获取当前日期的农历年
            </summary>
        </member>
        <member name="P:System.ChinaDateTime.Month">
            
            <summary>
            获取当前日期的农历月份
            </summary>
        </member>
        <member name="P:System.ChinaDateTime.DayOfMonth">
            
            <summary>
            获取当前日期的农历月中天数
            </summary>
        </member>
        <member name="P:System.ChinaDateTime.IsLeap">
            
            <summary>
            获取当前日期是否为闰月中的日期
            </summary>
        </member>
        <member name="P:System.ChinaDateTime.Now">
            
            <summary>
            返回当前日前的农历日期。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.CacheService.CacheService">
            <summary>
            可以被业务层调用，而缓存任何操作下的数据视图。如果数据被更改，可被监听器通知。
            </summary>
        </member>
        <member name="M:AgileFrame.Core.CacheService.CacheService.#ctor(System.Object,System.Object)">
            <summary>
            多表结果缓存
            </summary>
            <param name="result"></param>
            <param name="multiQuery"></param>
        </member>
        <member name="P:AgileFrame.Core.EventAndDelegate.Delegate_LanguageService.OneLanguageService">
            <summary>
            在调试期被载入的 持久层执行数据库操作触发的事情，显示了持久层对应的完整Sql语句
            </summary>
        </member>
        <member name="P:AgileFrame.Core.EventAndDelegate.Delegate_MessageBox.OneMessageBox">
            <summary>
            在调试期被载入的 持久层执行数据库操作触发的事情，显示了持久层对应的完整Sql语句
            </summary>
        </member>
        <member name="T:AgileFrame.Core.AppDomainLaunchHelper">
            <summary>
            Because AddIn assemblies are loaded into the LoadFrom context, creating AppDomains in them that
            use an arbitrary ApplicationBase path does not work correctly.
            This class contains a static method that helps launching a static method on a type in a new AppDomain.
            </summary>
            <example>
             <code>
             public static class CurrentClass { // is NOT MarshalByRef
              public static ResultClass[] GetResults()
              {
               AppDomainSetup setup = new AppDomainSetup();
               setup.ApplicationBase = myApplicationBase;
               AppDomain domain = AppDomain.CreateDomain("Display name for domain", AppDomain.CurrentDomain.Evidence, setup);
               try {
                 return (ResultClass[])AppDomainLaunchHelper.LaunchInAppDomain(domain, typeof(CurrentClass), "GetResultsDirectly", requestObject);
               } finally {
                 AppDomain.Unload(domain);
               }
              }
              public static ResultClass[] GetResultsDirectly(Request requestObject) { ... }
             }
             [Serializable] class Request { ... }  // must be serializable !!!
             [Serializable] class ResultClass { ... }  // must be serializable !!!
            </code></example>
        </member>
        <member name="T:AgileFrame.Core.MultiThreadService.AtomicInteger">
            <summary>
            从JDK 1.5开始，util.concurrent包提供了Atomic类型，包括AtomicInteger、AtomicLong、AtomicBoolean、AtomicReference、AtomicFieldUpdate等，这些类在并发编程中大有作用。
            非锁定并发操作
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MultiThreadService.AtomicInteger.CompareAndSet(System.Int32,System.Int32)">
            <summary>
            重点：
            </summary>
            <param name="expect"></param>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.NumericSortService.NumericComparer">
            <summary>
            Alphabetic sort，而非 Natural numeric sort 
            </summary>
        </member>
        <member name="T:AgileFrame.Core.NumericSortService.StringLogicalComparer">
            <summary>
            emulates StrCmpLogicalW, but not fully 重要的比较器
            </summary>
        </member>
        <member name="T:AgileFrame.Orm.PersistenceLayer.PluginFramework.IApplication">
            <summary>
            传递引用
            </summary>
        </member>
        <member name="T:AgileFrame.Core.PluginFramework.IPlugin">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.PluginFramework.IPlugin_AutoUpDate">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.PluginFramework.PluginCenter">
            <summary>
            
            </summary>
        </member>
        <member name="M:AgileFrame.Core.PluginFramework.PluginCenter.InitAssambly">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.PluginFramework.Creator">
            <summary>
            
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ProcessService">
            <summary>
            进程服务 System.Diagnostics.Process currentProcess = System.Diagnostics.Process.GetCurrentProcess();
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ProcessService.IsOpened(System.String@,System.Diagnostics.Process@)">
            <summary>
            注意: AgileFrame.Server.exe 文件的进程名为 AgileFrame.Server
            </summary>
            <param name="processName"></param>
        </member>
        <member name="M:AgileFrame.Core.ProcessService.KillProcess(System.Int32)">
            <summary>
            
            </summary>
            <param name="ProcessID"></param>
        </member>
        <member name="M:AgileFrame.Core.ProcessService.KillProcess(System.String)">
            <summary>
            
            </summary>
            <param name="processName"></param>        
        </member>
        <member name="M:AgileFrame.Core.ProcessService.KillProcess2(System.String)">
            <summary>
            
            </summary>
            <param name="processName"></param>
        </member>
        <member name="T:AgileFrame.Core.ApplicationStateInfoService">
            <summary>
            This service is used to summarize important information
            about the state of the application when an exception occurs.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ApplicationStateInfoService.RegisterStateGetter(System.String,AgileFrame.Core.StateGetter)">
            <summary>
            Registers a new method to be invoked to get information about the current state of the application.
            </summary>
            <param name="title">The title of the new state entry.</param>
            <param name="stateGetter">The method to be invoked to get the state value.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="title"/> is null.</exception>
            <exception cref="T:System.ArgumentException">A state getter with the specified <paramref name="title"/> is already registered.</exception>
        </member>
        <member name="M:AgileFrame.Core.ApplicationStateInfoService.IsRegistered(System.String)">
            <summary>
            Determines whether a state getter with the specified title is already registered.
            </summary>
            <param name="title">The title to look for.</param>
            <returns><c>true</c>, if a state getter with the specified title is already registered, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:AgileFrame.Core.ApplicationStateInfoService.UnregisterStateGetter(System.String)">
            <summary>
            Unregisters a state getter.
            </summary>
            <param name="title">The title of the state entry to remove.</param>
            <returns><c>true</c> if the specified title was found and removed, otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="title"/> is null.</exception>
        </member>
        <member name="M:AgileFrame.Core.ApplicationStateInfoService.GetCurrentApplicationStateInfo">
            <summary>
            Gets a snapshot of the current application state information from all registered state getters.
            </summary>
            <returns>A dictionary with the titles and results of all registered state getters.</returns>
        </member>
        <member name="M:AgileFrame.Core.ApplicationStateInfoService.AppendFormatted(System.Text.StringBuilder)">
            <summary>
            Appends the current application state information from all registered state getters
            to the specified <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to append the state information to.</param>
        </member>
        <member name="T:AgileFrame.Core.StateGetter">
            <summary>
            A delegate used to get information about the current state of the application.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.AssemblyService">
            <summary>
            列出.NET程序所依赖的Assembly 检查 Assembly
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.AssemblyService.ListDependentsByAppDomain(System.String)">
            <summary>
            Use AppDomain.Load to load assemblies
            
            This approach has its benefit, you can apply assembly app.config file to load 
            the dependented assembly, please read 
            </summary>
            <param name="p"></param>
        </member>
        <member name="T:AgileFrame.Core.Core.Services.AssemblyService.LoadAssemblyHelper">
            <summary>
            
            </summary>
        </member>
        <member name="F:AgileFrame.Core.Core.Services.AssemblyService.LoadAssemblyHelper.appDomain">
            <summary>
            C# 动态加载/卸载Assembly的解决方案
            </summary>
        </member>
        <member name="T:StringDictionaryPerformance.Program">
            <summary>
            对以字符串为主键的单值查找的优先选择 Hashtable 或者 Dictionary. 个人觉得如果只注重效率的话， Hashtable 更好一些，
            特别是在字符串较长时其效率几乎比Dictionary 快将近一倍。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ConsoleService">
            <summary>
            控制台服务，配置App.config中增加节点 add key="Debugger" value="1"  即可实现控制台
            </summary>
        </member>
        <member name="F:AgileFrame.Core.ConsoleService.SWP_NOSIZE">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.ConsoleService.SWP_NOMOVE">
            <summary>
            Retains the current position (ignores X and Y parameters).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.ConsoleService.SWP_NOZORDER">
            <summary>
            Retains the current Z order (ignores the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.ConsoleService.SWP_NOREDRAW">
            <summary>
            Does not redraw changes. 
            If this flag is set, no repainting of any kind occurs. 
            This applies to the client area, 
            the nonclient area (including the title bar and scroll bars), 
            and any part of the parent window uncovered as a result of the window being moved. 
            When this flag is set, 
            the application must explicitly invalidate or redraw any parts of the window and parent window that need redrawing.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.ConsoleService.SWP_NOACTIVATE">
            <summary>
            Does not activate the window. 
            If this flag is not set, the window is activated and moved to the top of either the topmost or non-topmost group 
            (depending on the setting of the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.ConsoleService.IsNeedWebConsole">
            <summary>
            是否需要Web控制台
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.SwitchVisible">
            <summary>
            只适用于cs程序，切换控制台是否可视
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Show">
            <summary>
            只适用于cs程序，显示控制台
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.ShowConsoleServer">
            <summary>
            只适用于cs程序，显示控制台
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Hide">
            <summary>
            只适用于cs程序，隐藏控制台
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.HideConsoleServer">
            <summary>
            只适用于cs程序，隐藏控制台
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.SetCosolePos(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Changes the size, position, and Z order of a child, pop-up, or top-level window. 
            These windows are ordered according to their appearance on the screen. 
            The topmost window receives the highest rank and is the first window in the Z order
            </summary>
            <param name="hWndInsertAfter">
            A handle to the window to precede the positioned window in the Z order.
            This parameter must be a window handle or one of the following values:
            HWND_BOTTOM, HWND_NOTOPMOST,HWND_TOP,HWND_TOPMOST
            </param>
            <param name="x">Specifies the new position of the left side of the window, in client coordinates.</param>
            <param name="y">Specifies the new position of the top of the window, in client coordinates.</param>
            <param name="width">Specifies the new width of the window, in pixels.</param>
            <param name="height">Specifies the new height of the window, in pixels.</param>
            <param name="flags">
            Specifies the window sizing and positioning flags. 
            This parameter can be a combination of the following values:
            SWP_ASYNCWINDOWPOS,SWP_DEFERERASE,SWP_DRAWFRAME,SWP_FRAMECHANGED,
            SWP_HIDEWINDOW,SWP_NOACTIVATE,SWP_NOCOPYBITS,SWP_NOMOVE,
            SWP_NOOWNERZORDER,SWP_NOREDRAW,SWP_NOREPOSITION,SWP_NOSENDCHANGING,
            SWP_NOSIZE,SWP_NOZORDER,SWP_SHOWWINDOW
            </param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.UnImplemented">
            <summary>
            方法还未被实现
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Write(System.ConsoleColor,System.Char)">
            <summary>
            多语言控制台输出，这里不能调用 MyDebugger.IsAttached 函数
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Write(System.ConsoleColor,System.String)">
            <summary>
            多语言控制台输出，这里不能调用 MyDebugger.IsAttached 函数
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.WriteLine(System.ConsoleColor,System.String,System.String)">
            <summary>
            多语言控制台输出，这里不能调用 MyDebugger.IsAttached 函数
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.WriteLine(System.ConsoleColor,System.String)">
            <summary>
            多语言控制台输出，这里不能调用 MyDebugger.IsAttached 函数
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.WriteLine(System.ConsoleColor,System.Collections.Generic.List{System.String})">
            <summary>
            多语言控制台输出，这里不能调用 MyDebugger.IsAttached 函数
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.WriteLine(System.String)">
            <summary>
            多语言控制台输出，这里不能调用 MyDebugger.IsAttached 函数
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.WriteLine(System.ConsoleColor,System.String,System.String,System.Object[])">
            <summary>
            多语言控制台输出
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.WriteLine(System.String,System.String)">
            <summary>
            多语言控制台输出，这里不能调用 MyDebugger.IsAttached 函数
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Read">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Debug(AgileFrame.Core.CoreException)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Info(AgileFrame.Core.CoreException)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.DataBasePerformance(AgileFrame.Core.CoreException)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.DAL_Opera(AgileFrame.Core.CoreException)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.BLL_UseCase(AgileFrame.Core.CoreException)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.DataBasePerformance(System.String)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.DAL_Opera(System.String)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.BLL_UseCase(System.String)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Debug(System.String,System.Object[])">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Debug(System.String,System.String,System.Object[])">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Debug(System.String)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Info(System.String,System.String,System.Object[])">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Info(System.String)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Warn(System.String)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Error(System.String)">
            <summary>错误级别，是必然打印到控制台的</summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Error(System.String,System.Object[])">
            <summary>错误级别，是必然打印到控制台的</summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Fatal(System.String)">
            <summary>致命错误级别，是必然打印到控制台的</summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Fatal(System.String,System.Object[])">
            <summary>致命错误级别，是必然打印到控制台的</summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Warn(AgileFrame.Core.CoreException)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Error(AgileFrame.Core.CoreException)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.Fatal(AgileFrame.Core.CoreException)">
            <summary></summary>
        </member>
        <member name="M:AgileFrame.Core.ConsoleService.HandlerRoutine(System.Int32)">
            
            <summary>
            处理消息的事件
            </summary>
        </member>
        <member name="P:AgileFrame.Core.ConsoleService.HandlerConsole">
            <summary>
            在调试期被载入的 持久层执行数据库操作触发的事情，显示了持久层对应的完整Sql语句
            </summary>
        </member>
        <member name="P:AgileFrame.Core.ConsoleService.IsNeedCreateConsole">
            <summary>
            是否启用辅助web程序使用的 框架控制台，可以使用10次。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MyConsoleWindow">
            <summary>
            在MyConsoleWindow调用之前，不能调用Console.Write等方法。配置App.config中增加节点 add key="Debugger" value="1"  即可实现控制台
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.SWP_NOSIZE">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.SWP_NOMOVE">
            <summary>
            Retains the current position (ignores X and Y parameters).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.SWP_NOZORDER">
            <summary>
            Retains the current Z order (ignores the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.SWP_NOREDRAW">
            <summary>
            Does not redraw changes. 
            If this flag is set, no repainting of any kind occurs. 
            This applies to the client area, 
            the nonclient area (including the title bar and scroll bars), 
            and any part of the parent window uncovered as a result of the window being moved. 
            When this flag is set, 
            the application must explicitly invalidate or redraw any parts of the window and parent window that need redrawing.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.SWP_NOACTIVATE">
            <summary>
            Does not activate the window. 
            If this flag is not set, the window is activated and moved to the top of either the topmost or non-topmost group 
            (depending on the setting of the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.WS_CAPTION">
            <summary>
             Creates a window that has a title bar (implies the WS_BORDER style)
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.FLASHW_STOP">
            <summary>
            Stop flashing. The system restores the window to its original state.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.FLASHW_CAPTION">
            <summary>
            Flash the window caption.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.FLASHW_TRAY">
            <summary>
            Flash the taskbar button.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.FLASHW_ALL">
            <summary>
            Flash both the window caption and taskbar button. 
            This is equivalent to setting the FLASHW_CAPTION | FLASHW_TRAY flags.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.FLASHW_TIMER">
            <summary>
            Flash continuously, until the FLASHW_STOP flag is set.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.FLASHW_TIMERNOFG">
            <summary>
            Flash continuously until the window comes to the foreground.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.GENERIC_READ">
            <summary>
            Requests read access to the console screen buffer, 
            enabling the process to read data from the buffer.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.GENERIC_WRITE">
            <summary>
            Requests write access to the console screen buffer,
            enabling the process to write data to the buffer.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.FILE_SHARE_READ">
            <summary>
            Other open operations can be performed on the console screen buffer for read access.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.FILE_SHARE_WRITE">
            <summary>
            Other open operations can be performed on the console screen buffer for write access.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.STD_INPUT_HANDLE">
            <summary>
            The standard input device. Initially, this is the console input buffer
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.STD_OUTPUT_HANDLE">
            <summary>
            The standard output device. Initially, this is the active console screen buffer
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyConsoleWindow.STD_ERROR_HANDLE">
            <summary>
            The standard error device. Initially, this is the active console screen buffer
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.MessageBeep(System.Int32)">
            <param name="type">ref http://msdn.microsoft.com/en-us/library/ms680356(VS.85).aspx</param>
        </member>
        <!-- 对于成员“M:AgileFrame.Core.MyConsoleWindow.SetWindowLong(System.IntPtr,System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:AgileFrame.Core.MyConsoleWindow.GetWindowLong(System.IntPtr,System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:AgileFrame.Core.MyConsoleWindow.AllocConsole">
            <returns>If the function succeeds, return true</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.FreeConsole">
            <returns>If the function succeeds, return true.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.GetConsoleTitle(System.Text.StringBuilder,System.Int32)">
            <returns>If the function succeeds, return true</returns>
        </member>
        <!-- 对于成员“M:AgileFrame.Core.MyConsoleWindow.GetConsoleWindow”忽略有格式错误的 XML 注释 -->
        <member name="M:AgileFrame.Core.MyConsoleWindow.GetStdHandle(System.Int32)">
            <summary>
            Retrieves a handle to the specified standard device (standard input, standard output, or standard error).
            </summary>
            <param name="handle">
            STD_INPUT_HANDLE, (DWORD)-10
            　　　 The standard input device. Initially, this is the console input buffer, CONIN$.
            STD_OUTPUT_HANDLE, (DWORD)-11
            　　　 The standard output device. Initially, this is the active console screen buffer, CONOUT$.
            STD_ERROR_HANDLE, (DWORD)-12
            　　　 The standard error device. Initially, this is the active console screen buffer, CONOUT$.
            </param>
            <returns>The handle to the specified standard device </returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.SetConsoleTextAttribute(System.IntPtr,System.ConsoleColor)">
            <summary>
            Sets the attributes of characters written to the console screen buffer by the WriteFile or WriteConsole function, 
            or echoed by the ReadFile or ReadConsole function. 
            This function affects text written after the function call.
            </summary>
            <param name="hConsoleOutput">A handle to the console screen buffer. The handle must have the GENERIC_READ access right</param>
            <param name="wAttributes">The character attributes.</param>
            <returns>If the function succeeds, the return value is True.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.SetConsoleTitle(System.String)">
            <summary>
            Sets the title for the current console window.
            </summary>
            <param name="lpConsoleTitle">The string to be displayed in the title bar of the console window. The total size must be less than 64K</param>
            <returns>If the function succeeds, the return value is True.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            The ShowWindow function sets the specified window's show state.
            </summary>
            <param name="hwnd">Handle to the window</param>
            <param name="nCmdShow">
            Specifies how the window is to be shown.
            This parameter is ignored the first time an application calls ShowWindow,
            if the program that launched the application provides a STARTUPINFO structure.
            Otherwise, the first time ShowWindow is called, 
            the value should be the value obtained by the WinMain function in its nCmdShow parameter.
            In subsequent calls, this parameter can be one of the following values.
            ref http://msdn.microsoft.com/en-us/library/ms633548(VS.85).aspx</param>
            <returns>If the window was previously visible, the return value is True</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.IsWindowVisible(System.IntPtr)">
            <summary>
            Retrieves the visibility state of the specified window.
            </summary>
            <param name="hwnd">Handle to the window to test</param>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.CreateConsoleScreenBuffer(System.Int32,System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Creates a console screen buffer.
            </summary>
            <param name="access">The access to the console screen buffer.</param>
            <param name="share">
            This parameter can be zero, indicating that the buffer cannot be shared, 
            or it can be one or more of the following values.
            </param>
            <param name="security">
            A pointer to a SECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by child processes.
            If lpSecurityAttributes is NULL, the handle cannot be inherited.
            The lpSecurityDescriptor member of the structure specifies a security descriptor for the new console screen buffer.
            If lpSecurityAttributes is NULL, the console screen buffer gets a default security descriptor.
            The ACLs in the default security descriptor for a console screen buffer come from the primary or impersonation token of the creator.
            </param>
            <param name="flags">The type of console screen buffer to create. The only supported screen buffer type is CONSOLE_TEXTMODE_BUFFER</param>
            <param name="reserved">Reserved; should be NULL.</param>
            <returns>If the function succeeds, the return value is a handle to the new console screen buffer.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.SetConsoleActiveScreenBuffer(System.IntPtr)">
            <summary>
            Sets the specified screen buffer to be the currently displayed console screen buffer.
            </summary>
            <param name="handle">A handle to the console screen buffer.</param>
            <returns>If the function succeeds, the return value is True.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.WriteConsole(System.IntPtr,System.String,System.Int32,System.Int32@,System.IntPtr)">
            <summary>
            Writes a character string to a console screen buffer beginning at the current cursor location.
            </summary>
            <param name="handle">A handle to the console screen buffer. The handle must have the GENERIC_WRITE access right</param>
            <param name="s">A pointer to a buffer that contains characters to be written to the console screen buffer.</param>
            <param name="length">
            The number of TCHARs to write. 
            If the total size of the specified number of characters exceeds 64 KB, 
            the function fails with ERROR_NOT_ENOUGH_MEMORY.</param>
            <param name="written">A pointer to a variable that receives the number of TCHARs actually written.</param>
            <param name="reserved">Reserved; must be NULL.</param>
            <returns>If the function succeeds, the return value is True.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.GetConsoleCP">
            <summary>
            Retrieves the input code page used by the console associated with the calling process. 
            A console uses its input code page to translate keyboard input into the corresponding character value.
            </summary>
            <returns>
            The return value is a code that identifies the code page.
            </returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.GetConsoleOutputCP">
            <summary>
            Retrieves the output code page used by the console associated with the calling process. 
            A console uses its output code page to translate the character values written by the various output functions into the images displayed in the console window
            </summary>
            <returns>The return value is a code that identifies the code page</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.GetConsoleMode(System.IntPtr,System.Int32@)">
            <summary>
            Retrieves the current input mode of a console's input buffer 
            or the current output mode of a console screen buffer.
            </summary>
            <param name="handle">
            A handle to the console input buffer or the console screen buffer. 
            The handle must have the GENERIC_READ access right
            </param>
            <param name="flags">
            A pointer to a variable that receives the current mode of the specified buffer.
            ref : http://msdn.microsoft.com/en-us/library/ms683167(VS.85).aspx
            </param>
            <returns>If the function succeeds, the return value is True.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.SetStdHandle(System.Int32,System.IntPtr)">
            <summary>
            Sets the handle for the specified standard device 
            (standard input, standard output, or standard error).
            </summary>
            <param name="handle1">T
            he standard device for which the handle is to be set
            (STD_INPUT_HANDLE,STD_OUTPUT_HANDLE,STD_ERROR_HANDLE)
            </param>
            <param name="handle2">The handle for the standard device.</param>
            <returns>If the function succeeds, the return value is True.</returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.SetParent(System.IntPtr,System.IntPtr)">
            <summary>
            The SetParent function changes the parent window of the specified child window.
            </summary>
            <param name="hwnd">Handle to the child window.</param>
            <param name="hwnd2">
            Handle to the new parent window. 
            If this parameter is NULL, the desktop window becomes the new parent window
            </param>
            <returns>
            If the function succeeds, the return value is a handle to the previous parent window.
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.GetParent(System.IntPtr)">
            <summary>
            The GetParent function retrieves a handle to the specified window's parent or owner.
            </summary>
            <param name="hwnd">Handle to the window whose parent window handle is to be retrieved</param>
            <returns>
            If the window is a child window, the return value is a handle to the parent window. 
            If the window is a top-level window, the return value is a handle to the owner window. 
            If the window is a top-level unowned window or if the function fails, the return value is NULL
            </returns>
        </member>
        <member name="M:AgileFrame.Core.MyConsoleWindow.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Changes the size, position, and Z order of a child, pop-up, or top-level window. 
            These windows are ordered according to their appearance on the screen. 
            The topmost window receives the highest rank and is the first window in the Z order
            </summary>
            <param name="hWnd"> A handle to the window.</param>
            <param name="hWndInsertAfter">
            A handle to the window to precede the positioned window in the Z order.
            This parameter must be a window handle or one of the following values:
            HWND_BOTTOM, HWND_NOTOPMOST,HWND_TOP,HWND_TOPMOST
            </param>
            <param name="x">Specifies the new position of the left side of the window, in client coordinates.</param>
            <param name="y">Specifies the new position of the top of the window, in client coordinates.</param>
            <param name="cx">Specifies the new width of the window, in pixels.</param>
            <param name="cy">Specifies the new height of the window, in pixels.</param>
            <param name="flags">
            Specifies the window sizing and positioning flags. 
            This parameter can be a combination of the following values:
            SWP_ASYNCWINDOWPOS,SWP_DEFERERASE,SWP_DRAWFRAME,SWP_FRAMECHANGED,
            SWP_HIDEWINDOW,SWP_NOACTIVATE,SWP_NOCOPYBITS,SWP_NOMOVE,
            SWP_NOOWNERZORDER,SWP_NOREDRAW,SWP_NOREPOSITION,SWP_NOSENDCHANGING,
            SWP_NOSIZE,SWP_NOZORDER,SWP_SHOWWINDOW
            </param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.Node">
            
            <summary>
            单链表
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.headNode">
            
            <summary>
            可以自定义开始头节点
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.insertNode(System.Object)">
            
            <summary>
            从后面插入
            </summary>
            <param name="ob">要插入的数据</param>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.insertNode(System.Object,System.Int32)">
            
            <summary>
            指定插入(插入指定参数的下面)l从0开始插入第一个的前面
            </summary>
            <param name="ob">要插入的数据</param>
            <param name="l">要插入的数据的位置</param>
            <returns>true为插入成功，反之失败</returns>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.delNode">
            
            <summary>
            删除最后一个
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.delNode(System.Int32)">
            
            <summary>
            指定删除(l从1开始)
            </summary>
            <param name="l">指定删除位置</param>
            <returns>true删除成功，反之失败</returns>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.delNode(System.Object)">
            
            <summary>
            查找删除
            </summary>
            <param name="ob">输入要删除的输入</param>
            <returns>true删除成功，反之失败</returns>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.Upnode(System.Int32)">
            
            <summary>
            上移动
            </summary>
            <param name="l">指定要移动的位置</param>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.Downnode(System.Int32)">
            
            <summary>
            下移动
            </summary>
            <param name="l">指定要移动的位置</param>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.compositorNode(System.Boolean)">
            
            <summary>
            排序
            </summary>
            <param name="b">true（正）从小到大，false（反）</param>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.rollbackNode">
            
            <summary>
            反链
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.showNodenum">
            
            <summary>
            返回节点数方法
            </summary>
            <returns>节点数</returns>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Node.showNode(System.Int32)">
            
            <summary>
            显示指定数据
            </summary>
            <param name="l">指定位置</param>
            <returns>返回数据</returns>
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.CircularList">
            
            <summary>
            循环链表
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.CircularList.insert(AgileFrame.Core.Services.DataStructureService.CircularList.Node,System.Object)">
            
            <summary>
            插入
            </summary>
            <param name="x"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.CircularList.remove(AgileFrame.Core.Services.DataStructureService.CircularList.Node)">
            
            <summary>
            移除
            </summary>
            <param name="x"></param>
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.Josephuses">
            
            <summary>
            间接用循环链表解决，约瑟芬问题
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.Josephus">
            
            <summary>
            循环链表列子（约瑟芬问题）
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.QueueSequenceService`1">
            <summary>
            使用泛型的顺序队列的实现---Implementation of Sequence Queue using Generics
            </summary>
            <typeparam name="T">Type of the data items</typeparam>
        </member>
        <member name="F:AgileFrame.Core.Services.QueueSequenceService`1._maxSize">
            <summary>
            Maxsize of the queue
            </summary>
        </member>
        <member name="F:AgileFrame.Core.Services.QueueSequenceService`1._data">
            <summary>
            Data domain of the queue
            </summary>
        </member>
        <member name="F:AgileFrame.Core.Services.QueueSequenceService`1._front">
            <summary>
            Fronter pointer
            </summary>
        </member>
        <member name="F:AgileFrame.Core.Services.QueueSequenceService`1._rear">
            <summary>
            Rear pointer
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.QueueSequenceService`1.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxsize">Max size for the queue</param>
        </member>
        <member name="M:AgileFrame.Core.Services.QueueSequenceService`1.EnQueue(`0)">
            <summary>
            Insert an item into the queue
            </summary>
            <param name="item">Item to be inserted.</param>
        </member>
        <member name="F:AgileFrame.Core.Services.QueueSequenceService`1._size">
            <summary>
            Current size of the queue
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.QueueSequenceService`1.DeQueue">
            <summary>
            Dequeue an item
            </summary>
            <returns>Item dequeued</returns>
        </member>
        <member name="M:AgileFrame.Core.Services.QueueSequenceService`1.GetFront">
            <summary>
            Get the front item of the queue
            </summary>
            <returns>Front item of the queue</returns>
        </member>
        <member name="M:AgileFrame.Core.Services.QueueSequenceService`1.SetEmpty">
            <summary>
            Set the queue to be empty
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Services.QueueSequenceService`1.MaxSize">
            <summary>
            Get the maxsize for the queue
            </summary>
        </member>
        <member name="P:AgileFrame.Core.Services.QueueSequenceService`1.IsEmpty">
            <summary>
            The queue is empty or not
            </summary>
            <value>True, if the queue is empty</value>
        </member>
        <member name="T:AgileFrame.Core.Services.StackService">
            <summary>
            object堆栈(先进后出)
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.StackService.push(System.Object)">
            
            <summary>
            推入
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:AgileFrame.Core.Services.StackService.pop">
            
            <summary>
            推出
            </summary>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.Services.NodeStack">
            <summary>
            链表int堆栈
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.Findbunch">
            
            <summary>
            串查找(从起始位置开始的子窜与模式串相匹配，逐个字符比较看是否相等，只要成功的到达P结尾，就把模式串p在文本串s中的出现次数加一)
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Findbunch.getbunch(System.String,System.String)">
            
            <summary>
            静态方法接受二个string参数
            </summary>
            <param name="p">短的string</param>
            <param name="s">长的string</param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.Manbunch">
            
            <summary>
            把原串中的 每个空白符序列 用了 单个的空白符 代替外，其他与原串一样
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.Manbunch.Getbunch(System.String)">
            
            <summary>
            静态方法接受一个string参数
            </summary>
            <param name="s">要处理的string</param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.Position">
            LEFT左子树，RIGHT右子树
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.Tag">
            
            LINK指向孩子，THREAD指向后继
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.IBinNode">
            
            二叉树节点的抽象定义
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.ITravelBinTree">
            
            遍历，线索化等操作的接口
        </member>
        <member name="T:AgileFrame.Core.Services.DataStructureService.BinNodePtr">
            
            Normal actualize of bintree
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.TravelBinTree.PreOrderTravel">
            
            先序遍历树,用非递归算法实现
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.TravelBinTree.TreeBuilder">
            
            按照先序遍历顺序遍历树
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.TravelBinTree.InOrderThreading">
            
            中序线索化
        </member>
        <member name="M:AgileFrame.Core.Services.DataStructureService.TravelBinTree.InThreading(AgileFrame.Core.Services.DataStructureService.IBinNode)">
            
            中序线索化的递归实现
            <param name="t"></param>
        </member>
        <member name="T:AgileFrame.Core.MyDebugger">
            <summary>
            调试器，检查 System.Diagnostics.Debugger 的数值；允许通过配置 配置文件，强制在维护期 设置程序 进入调试期。
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyDebugger.IsPerformance">
            <summary>
            <add key="Performance" value="1"/>
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyDebugger.IsAttached">
            <summary>
            调试器，检查 配置项 <add key="Debugger" value="1"/>  的值；允许通过配置 配置文件，强制在维护期 设置程序 进入调试期。
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyDebugger.IsDebuger">
            <summary>
            判断是否能够显示调试信息
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyDebugger.IsInfo">
            <summary>
            判断是否能够显示通告信息
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyDebugger.IsWarn">
            <summary>
            判断是否能够显示警告信息
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyDebugger.IsError">
            <summary>
            判断是否能够显示错误信息
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MyDebugger.IsFatal">
            <summary>
            判断是否能够显示严重错误信息
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MyDebugger.LogType">
            <summary>
            请求中包含DEBUG、INFO、WARN、ERROR和FATAL五5个级别
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyDebugger.LogType.None">
            <summary>
            不显示所有记录信息
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyDebugger.LogType.DEBUG">
            <summary>
            仅显示调试信息，以及以上级别
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyDebugger.LogType.INFO">
            <summary>
            仅显示通知信息，以及以上级别
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyDebugger.LogType.WARN">
            <summary>
            仅显示警告信息，以及以上级别
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyDebugger.LogType.ERROR">
            <summary>
            仅显示错误信息，以及以上级别
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MyDebugger.LogType.FATAL">
            <summary>
            仅显示致命错误信息，以及以上级别
            </summary>
        </member>
        <member name="T:AgileFrame.Core.BLLException">
            <summary>
            业务层信息，捕获Exception后封装为BLLException可直接在UI层 显示其 FriendMessage 进行错误提示。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.NoSuchBookException">
            <summary>
            业务异常类 举例。先显示 Exception消息，再显示分层的 业务Exception消息
            </summary>
        </member>
        <member name="M:AgileFrame.Core.NoSuchBookException.#ctor(System.String,System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.BackorderedException">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.BackorderedException.#ctor(System.String,System.String,System.String)">
            <summary>
            预留
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ExceptionFactory.CreateApplicationException(AgileFrame.Core.RemoteException)">
            <summary>
            需要特殊处理的异常，因为异常的信息是记录在非正规渠道里面的
            </summary>
            <param name="re"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.NoSuchInstanceException">
            <summary>
            未声明的对象引用异常。表示对象不存在，或者指针对空，或者参数不存在等错误
            </summary>
        </member>
        <member name="M:AgileFrame.Core.NoSuchInstanceException.#ctor(System.String,System.String)">
            <summary>
            对象不存在，或者指针对空，或者参数不存在等错误
            </summary>
        </member>
        <member name="T:AgileFrame.Core.UIException">
            <summary>
            UI层信息，捕获Exception后封装为UIException可直接在UI层 显示其 FriendMessage 作为用户友好信息。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.FileSystemItem">
            <summary>
            FileSystemItem
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileSystemItem.Version">
            <summary>
            版本
            </summary>
            <returns></returns>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.FullName">
            <summary>
            完整目录
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.Title">
            <summary>
            完整目录
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.CreationDate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.IsFolder">
            <summary>
            是否是文件夹
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.LastAccessDate">
            <summary>
            访问时间
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.LastWriteDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.FileCount">
            <summary>
            文件数
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileSystemItem.SubFolderCount">
            <summary>
            文件夹数
            </summary>
        </member>
        <member name="T:AgileFrame.Core.FileSystemManager">
            <summary>
            FileSystemManager
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.GetRootPath">
            <summary>
            读根目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.SetRootPath(System.String)">
            <summary>
            写根目录
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.GetItems">
            <summary>
            读取列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.GetItems(System.String)">
            <summary>
            读取列表
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.CreateFolder(System.String,System.String)">
            <summary>
            读取文件夹
            </summary>
            <param name="name"></param>
            <param name="parentName"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.DeleteFolder(System.String)">
            <summary>
            删除文件夹
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.MoveFolder(System.String,System.String)">
            <summary>
            移动文件夹
            </summary>
            <param name="oldPath"></param>
            <param name="newPath"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.CreateFile(System.String,System.String)">
            <summary>
            创建文件
            </summary>
            <param name="filename"></param>
            <param name="path"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.CreateFile(System.String,System.String,System.Byte[])">
            <summary>
            创建文件
            </summary>
            <param name="filename"></param>
            <param name="path"></param>
            <param name="contents"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.OpenText(System.String)">
            <summary>
            读取文件
            </summary>
            <param name="name"></param>
            <param name="parentName"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.WriteAllText(System.String,System.String)">
            <summary>
            写入一个新文件，在文件中写入内容，然后关闭文件。如果目标文件已存在，则改写该文件。 
            </summary>
            <param name="name"></param>
            <param name="parentName"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.MoveFile(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="oldPath"></param>
            <param name="newPath"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.GetItemInfo(System.String)">
            <summary>
            读取文件信息
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.CopyFolder(System.String,System.String)">
            <summary>
            复制文件夹 5-1-aspx
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.IsSafeName(System.String)">
            <summary>
            判断是否为安全文件名
            </summary>
            <param name="str">文件名</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.IsUnsafeName(System.String)">
            <summary>
             判断是否为不安全文件名
            </summary>
            <param name="str">文件名、文件夹名</param>
            <returns>bool</returns>
        </member>
        <member name="M:AgileFrame.Core.FileSystemManager.IsCanEdit(System.String)">
            <summary>
             判断是否为可编辑文件
            </summary>
            <param name="str">文件名、文件夹名</param>
            <returns>bool</returns>
        </member>
        <member name="T:AgileFrame.Core.FileDirectoryEnumerable">
             <summary>
             文件或目录遍历器,本类型为 FileDirectoryEnumerator 的一个包装
             </summary>
             <remarks>
             
             目录里有67w个文件，用C#的GetFiles，卡在那里一个小时没动地方 
             用本方法，实际跑的结果，72w个文件，3~40分钟吧
             
             以下代码演示使用这个文件目录遍历器，连循环都不用做。
             
             FileDirectoryEnumerable e = new FileDirectoryEnumerable();
             e.SearchPath = @"c:\";
             e.ReturnStringType = true ;
             e.SearchPattern = "*.exe";
             e.SearchForDirectory  = false ;
             e.SearchForFile  = true;
             foreach (object name in e)
             {
                 ConsoleService.Debug(name);
             }
             System.Console.ReadLine();
             
            </remarks>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerable.GetEnumerator">
            <summary>
            返回内置的文件和目录遍历器
            </summary>
            <returns>遍历器对象</returns>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerable.Close">
            <summary>
            关闭对象
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerable.ReturnStringType">
            <summary>
            是否以字符串方式返回查询结果,若返回true则当前对象返回为字符串,
            否则返回 System.IO.FileInfo或System.IO.DirectoryInfo类型
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerable.SearchPattern">
            <summary>
            文件或目录名的通配符
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerable.SearchPath">
            <summary>
            搜索路径,必须为绝对路径
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerable.SearchForFile">
            <summary>
            是否查找文件
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerable.SearchForDirectory">
            <summary>
            是否查找子目录
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerable.ThrowIOException">
            <summary>
            发生IO错误时是否抛出异常
            </summary>
        </member>
        <member name="T:AgileFrame.Core.FileDirectoryEnumerator">
             <summary>
             文件和目录的遍历器
             </summary>
             <remarks>本对象为Win32API函数 FindFirstFile , FindNextFile 
             和 FindClose 的一个包装
             
             以下代码演示使用了 FileDirectoryEnumerator 
             
             FileDirectoryEnumerator e = new FileDirectoryEnumerator();
             e.SearchPath = @"c:\";
             e.Reset();
             e.ReturnStringType = true ;
             while (e.MoveNext())
             {
                 ConsoleService.Debug
                     ( e.LastAccessTime.ToString("yyyy-MM-dd HH:mm:ss")
                     + "   " + e.FileLength + "  \t" + e.Name );
             }
             e.Close();
             System.Console.ReadLine();
             
            </remarks>
        </member>
        <member name="F:AgileFrame.Core.FileDirectoryEnumerator.objCurrentObject">
            <summary>
            当前对象
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerator.Close">
            <summary>
            关闭对象,停止搜索
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerator.MoveNext">
            <summary>
            找到下一个文件或目录
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerator.Reset">
            <summary>
            重新设置对象
            </summary>
        </member>
        <member name="F:AgileFrame.Core.FileDirectoryEnumerator.intSearchHandler">
            <summary>
            查找处理的底层句柄
            </summary>
        </member>
        <member name="F:AgileFrame.Core.FileDirectoryEnumerator.bolStartSearchFlag">
            <summary>
            开始搜索标志
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerator.CloseHandler">
            <summary>
            关闭内部句柄
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerator.StartSearch">
            <summary>
            开始搜索
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerator.SearchNext">
            <summary>
            搜索下一个
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:AgileFrame.Core.FileDirectoryEnumerator.UpdateCurrentObject">
            <summary>
            更新当前对象
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.IsEmpty">
            <summary>
            该目录为空
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.SearchedCount">
            <summary>
            已找到的对象的个数
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.IsFile">
            <summary>
            当前对象是否为文件,若为true则当前对象为文件,否则为目录
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.LastErrorCode">
            <summary>
            最后一次操作的Win32错误代码
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.Name">
            <summary>
            当前对象的名称
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.Attributes">
            <summary>
            当前对象属性
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.CreationTime">
            <summary>
            当前对象创建时间
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.LastAccessTime">
            <summary>
            当前对象最后访问时间
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.LastWriteTime">
            <summary>
            当前对象最后保存时间
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.FileLength">
            <summary>
            当前文件长度,若为当前对象为文件则返回文件长度,若当前对象为目录则返回0
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.ThrowIOException">
            <summary>
            发生IO错误时是否抛出异常
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.ReturnStringType">
            <summary>
            是否以字符串方式返回查询结果,若返回true则当前对象返回为字符串,
            否则返回 System.IO.FileInfo或System.IO.DirectoryInfo类型
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.SearchPattern">
            <summary>
            要匹配的文件或目录名,支持通配符
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.SearchPath">
            <summary>
            搜索的父目录,必须为绝对路径,不得有通配符,该目录必须存在
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.SearchForFile">
            <summary>
            是否查找文件
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.SearchForDirectory">
            <summary>
            是否查找子目录
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileDirectoryEnumerator.Current">
            <summary>
            返回当前对象
            </summary>
        </member>
        <member name="F:AgileFrame.Core.FileService.DirectoryDic">
            <summary>
            避免重复io操作
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileService.ReadFromMemory(System.String)">
            <summary>
            内存流示例----->用内存流来读取图片            op.Filter = "JPG图片|*.jpg|GIF图片|*.gif";
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileService.Filter(System.String@)">
            <summary>
            过滤文件非法字符
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:AgileFrame.Core.FileService.IsCorrectPath(System.String)">
            <summary>
            所有路径目录都会拥有一次路径检查，如果检查为正确，则直接使用；如果检查为错误，则抛出目录出错。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="F:AgileFrame.Core.FileService.FileDic">
            <summary>
            多线程文件写入操作用，如果文件正在被使用中
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileService.GetDirectory(System.String)">
            <summary>
            查找所有文件夹下的路径
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileService.GetFile(System.String,System.String,System.Int32@)">
            <summary>
            查找所有目录下的所有文件的全名。
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileService.RenameDirectories(System.String,System.String)">
            <summary>
            重命名文件夹内的所有子文件夹   
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileService.CopyDirectory(System.String,System.String)">
            <summary>
            替换所有相同文件
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileService.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            是否替换所有相同文件
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileService.CloneDirectory(System.String,System.String)">
            <summary>
            复制文件夹中的所有文件到指定文件夹一模一样的。
            </summary>
            <param name="sourceDirPath">源文件夹路径</param>
            <param name="tarDirPath">保存路径</param>
        </member>
        <member name="M:AgileFrame.Core.FileService.Copy(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="sourceFileName"></param>
            <param name="destFileName"></param>
            <param name="overwrite"></param>
        </member>
        <member name="M:AgileFrame.Core.FileService.SetFileWriteable(System.String)">
            <summary>
            使得文件属性可写
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:AgileFrame.Core.FileService.CopyDirectory(System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean)">
            <summary>
            复制文件夹中的所有文件到指定文件夹,isAllHandled默认为false，为true的话，就是 第一级目录下面的文件都要。
            </summary>
            <param name="DirectoryPath">源文件夹路径</param>
            <param name="DirAddress">保存路径</param>
            <param name="DirSec">true 不替换，false 替换相同文件，第二个文件夹目录</param>
        </member>
        <member name="M:AgileFrame.Core.FileService.DelZhuShiDirectory(System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            复制文件夹中的所有文件到指定文件夹
            </summary>
            <param name="DirectoryPath">源文件夹路径</param>
            <param name="ZhuShiFileStr">保存路径</param>
            <param name="isAllHandled">true 保留第一个文件夹目录，false 不保留第一个文件夹目录</param>
        </member>
        <member name="M:AgileFrame.Core.FileService.Searchfile(System.String)">
            <summary>
            文件夹中搜索所有文件
            </summary>
            <param name="DirectoryPath"></param>
        </member>
        <member name="M:AgileFrame.Core.FileService.AutoBakeFile(System.String)">
            <summary>
            
            </summary>
            <param name="oldfile"></param>
        </member>
        <member name="M:AgileFrame.Core.FileService.AutoBakeFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="oldfile"></param>
            <param name="logmsg"></param>
        </member>
        <member name="M:AgileFrame.Core.FileService.AutoReadFile(System.String)">
            <summary>
            
            </summary>
            <param name="oldfile"></param>
            <param name="logmsg"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.FileService.AutoReadFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="oldfile"></param>
        </member>
        <member name="T:AgileFrame.Core.IniService.IniCF">
            <summary>
            效率高的原因是只读取了部分文件，而不用全部载入再内存操作。
            我当时也有尝试先全部读取到内存，再分析，发现效率并没有我这个高，因为我这个可能只是读一部分文件。我当时有做了一个测试，读一个10K的ini文件，如果全部读入内存，再分析，大约要100毫秒，而我这个大多时候只要大约30毫秒，并且读取效率跟键所在的位置有关系，键值在前的时候更快。
            </summary>
        </member>
        <member name="F:AgileFrame.Core.IniService.IniCF.path">
            
            <summary>
            Copyright (C) 2008 lgamoy@163.com
            Ini文件访问类(基于Compact Framework 2.0)
            说明：该类是在Window Mobile上使用的，所以为了保证执行高效，丢失了一些ini文件的特性。比如文件中不能有空行，否则读取不到。
            </summary>
        </member>
        <member name="M:AgileFrame.Core.IniService.IniCF.#ctor(System.String)">
            <summary>
            输入源文件
            </summary>
            <param name="iniFilePath"></param>
        </member>
        <member name="M:AgileFrame.Core.IniService.IniCF.GetPrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            读取
            </summary>
            <param name="ApplicationName">节名</param>
            <param name="KeyName">键名</param>
            <param name="Default">默认值</param>
            <param name="FileName">ini文件名</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.IniService.IniCF.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            
            <summary>
            ini文件写入
            </summary>
            <param name="ApplicationName">节名</param>
            <param name="KeyName">键名</param>
            <param name="Value">要写入的值</param>
            <param name="FileName">ini文件</param>
        </member>
        <member name="M:FileDirectoryEnumerable.GetEnumerator">
            <summary>
            返回内置的文件和目录遍历器
            </summary>
            <returns>遍历器对象</returns>
        </member>
        <member name="M:FileDirectoryEnumerable.Close">
            <summary>
            关闭对象
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerable.ReturnStringType">
            <summary>
            是否以字符串方式返回查询结果,若返回true则当前对象返回为字符串,
            否则返回 System.IO.FileInfo或System.IO.DirectoryInfo类型
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerable.SearchPattern">
            <summary>
            文件或目录名的通配符
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerable.SearchPath">
            <summary>
            搜索路径,必须为绝对路径
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerable.SearchForFile">
            <summary>
            是否查找文件
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerable.SearchForDirectory">
            <summary>
            是否查找子目录
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerable.ThrowIOException">
            <summary>
            发生IO错误时是否抛出异常
            </summary>
        </member>
        <member name="T:FileDirectoryEnumerator">
            <summary>
            文件和目录的遍历器
            </summary>
            <remarks>本对象为Win32API函数 FindFirstFile , FindNextFile 
            和 FindClose 的一个包装
            
            以下代码演示使用了 FileDirectoryEnumerator 
            
            FileDirectoryEnumerator e = new FileDirectoryEnumerator();
            e.SearchPath = @"c:\";
            e.Reset();
            e.ReturnStringType = true ;
            while (e.MoveNext())
            {
                ConsoleService.Debug
                    ( e.LastAccessTime.ToString("yyyy-MM-dd HH:mm:ss")
                    + "   " + e.FileLength + "  \t" + e.Name );
            }
            e.Close();
            System.Console.ReadLine();
            
            编写 袁永福 （ http://www.xdesigner.cn ）2006-12-8</remarks>
        </member>
        <member name="F:FileDirectoryEnumerator.objCurrentObject">
            <summary>
            当前对象
            </summary>
        </member>
        <member name="M:FileDirectoryEnumerator.Close">
            <summary>
            关闭对象,停止搜索
            </summary>
        </member>
        <member name="M:FileDirectoryEnumerator.MoveNext">
            <summary>
            找到下一个文件或目录
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FileDirectoryEnumerator.Reset">
            <summary>
            重新设置对象
            </summary>
        </member>
        <member name="F:FileDirectoryEnumerator.intSearchHandler">
            <summary>
            查找处理的底层句柄
            </summary>
        </member>
        <member name="F:FileDirectoryEnumerator.bolStartSearchFlag">
            <summary>
            开始搜索标志
            </summary>
        </member>
        <member name="M:FileDirectoryEnumerator.CloseHandler">
            <summary>
            关闭内部句柄
            </summary>
        </member>
        <member name="M:FileDirectoryEnumerator.StartSearch">
            <summary>
            开始搜索
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FileDirectoryEnumerator.SearchNext">
            <summary>
            搜索下一个
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:FileDirectoryEnumerator.UpdateCurrentObject">
            <summary>
            更新当前对象
            </summary>
            <returns>操作是否成功</returns>
        </member>
        <member name="P:FileDirectoryEnumerator.IsEmpty">
            <summary>
            该目录为空
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.SearchedCount">
            <summary>
            已找到的对象的个数
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.IsFile">
            <summary>
            当前对象是否为文件,若为true则当前对象为文件,否则为目录
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.LastErrorCode">
            <summary>
            最后一次操作的Win32错误代码
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.Name">
            <summary>
            当前对象的名称
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.Attributes">
            <summary>
            当前对象属性
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.CreationTime">
            <summary>
            当前对象创建时间
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.LastAccessTime">
            <summary>
            当前对象最后访问时间
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.LastWriteTime">
            <summary>
            当前对象最后保存时间
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.FileLength">
            <summary>
            当前文件长度,若为当前对象为文件则返回文件长度,若当前对象为目录则返回0
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.ThrowIOException">
            <summary>
            发生IO错误时是否抛出异常
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.ReturnStringType">
            <summary>
            是否以字符串方式返回查询结果,若返回true则当前对象返回为字符串,
            否则返回 System.IO.FileInfo或System.IO.DirectoryInfo类型
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.SearchPattern">
            <summary>
            要匹配的文件或目录名,支持通配符
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.SearchPath">
            <summary>
            搜索的父目录,必须为绝对路径,不得有通配符,该目录必须存在
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.SearchForFile">
            <summary>
            是否查找文件
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.SearchForDirectory">
            <summary>
            是否查找子目录
            </summary>
        </member>
        <member name="P:FileDirectoryEnumerator.Current">
            <summary>
            返回当前对象
            </summary>
        </member>
        <member name="T:AgileFrame.Core.FileNameEventArgs">
            <summary>
            Description of FileEventHandler.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.FileUtility">
            <summary>
            A utility class related to file utilities.
            </summary>
            <summary>
            A minimal version of FileUtility. Is used by ICSharpCode.SharpDevelop.Dom (which doesn't reference
            AgileFrame.Core)
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileUtility.GetSdkPath(System.String)">
            <summary>
            Searches all the .net sdk bin folders and return the path of the
            exe from the latest sdk.
            </summary>
            <param name="exeName">The EXE to search for.</param>
            <returns>The path of the executable, or null if the exe is not found.</returns>
        </member>
        <member name="M:AgileFrame.Core.FileUtility.GetRelativePath(System.String,System.String)">
            <summary>
            Converts a given absolute path and a given base path to a path that leads
            from the base path to the absoulte path. (as a relative path)
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileUtility.GetAbsolutePath(System.String,System.String)">
            <summary>
            Combines baseDirectoryPath with relPath and normalizes the resulting path.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileUtility.SearchDirectory(System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean,System.Boolean)">
            <summary>
            Finds all files which are valid to the mask <paramref name="filemask"/> in the path
            <paramref name="directory"/> and all subdirectories
            (if <paramref name="searchSubdirectories"/> is true).
            The found files are added to the List&lt;string&gt;
            <paramref name="collection"/>.
            If <paramref name="ignoreHidden"/> is true, hidden files and folders are ignored.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileUtility.IsValidPath(System.String)">
            <summary>
            This method checks if a path (full or relative) is valid.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileUtility.IsValidDirectoryName(System.String)">
            <summary>
            Checks that a single directory name (not the full path) is valid.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.FileUtility.NormalizePath(System.String)">
            <summary>
            Gets the normalized version of fileName.
            Slashes are replaced with backslashes, backreferences "." and ".." are 'evaluated'.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileUtility.NetFrameworkInstallRoot">
            <summary>
            Gets the installation root of the .NET Framework (@"C:\Windows\Microsoft.NET\Framework\")
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileUtility.NetSdk20InstallRoot">
            <summary>
            Location of the .NET 2.0 SDK install root.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileUtility.WindowsSdk60InstallRoot">
            <summary>
            Location of the .NET 3.0 SDK (Windows SDK 6.0) install root.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileUtility.WindowsSdk60aInstallRoot">
            <summary>
            Location of the Windows SDK Components in Visual Studio 2008 (.NET 3.5; Windows SDK 6.0a).
            </summary>
        </member>
        <member name="P:AgileFrame.Core.FileUtility.WindowsSdk61InstallRoot">
            <summary>
            Location of the .NET 3.5 SDK (Windows SDK 6.1) install root.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.LoggingPath">
            <summary>
            产生日志路径
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LoggingPath.CopyFolder(System.String,System.String)">
            <summary>
            拷贝文件夹
            </summary>
            <param name="strFromPath"></param>
            <param name="strToPath"></param>
        </member>
        <member name="T:AgileFrame.Core.LoggingService">
            <summary>
            Class for easy logging. 按调试期，测试期，与客户交付期分类。日志种类分为 SQL操作性能日志，异常日志，
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LoggingService.Debug(AgileFrame.Core.CoreException,System.Boolean)">
            <summary>
            IsMustRecord 为强制记录的意思；由于系统默认只记录 CoreException 一次，不会记录两次。除非您需要强制记录，采用该方法
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LoggingService.Info(AgileFrame.Core.CoreException,System.Boolean)">
            <summary>
            IsMustRecord 为强制记录的意思；由于系统默认只记录 CoreException 一次，不会记录两次。除非您需要强制记录，采用该方法
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LoggingService.Warn(AgileFrame.Core.CoreException,System.Boolean)">
            <summary>
            IsMustRecord 为强制记录的意思；由于系统默认只记录 CoreException 一次，不会记录两次。除非您需要强制记录，采用该方法
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LoggingService.Error(AgileFrame.Core.CoreException,System.Boolean)">
            <summary>
            IsMustRecord 为强制记录的意思；由于系统默认只记录 CoreException 一次，不会记录两次。除非您需要强制记录，采用该方法
            </summary>
        </member>
        <member name="M:AgileFrame.Core.LoggingService.Fatal(AgileFrame.Core.CoreException,System.Boolean)">
            <summary>
            IsMustRecord 为强制记录的意思；由于系统默认只记录 CoreException 一次，不会记录两次。除非您需要强制记录，采用该方法
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LoggingServiceType.Access">
            <summary>
            Access数据源日志
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LoggingServiceType.Debug">
            <summary>
            调试输出日志
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LoggingServiceType.Txt">
            <summary>
            文本输出日志
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LoggingServiceType.DataBasePerformance_Logging">
            <summary>
            数据库性能分析日志，采用Access存储介质
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LoggingServiceType.DAL_Opera_Logging">
            <summary>
            操作分析日志（数据访问接口），采用Access存储介质
            </summary>
        </member>
        <member name="F:AgileFrame.Core.LoggingServiceType.BLL_UseCase_Logging">
            <summary>
            用例分析日志（业务用例接口），采用Access存储介质
            </summary>
        </member>
        <member name="T:AgileFrame.Core.DBUtility.OleDbHelper">
            <summary>
            数据库的通用访问代码
            此类为抽象类，不允许实例化，在应用时直接调用即可
            </summary>
        </member>
        <member name="F:AgileFrame.Core.DBUtility.OleDbHelper.ConnectionStringLocalTransaction">
            <summary>
            获取数据库连接字符串，其属于静态变量且只读，项目中所有文档可以直接使用，但不能修改
            </summary>
        </member>
        <member name="M:AgileFrame.Core.DBUtility.OleDbHelper.GetConnection">
            <summary>
            获取数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.DBUtility.OleDbHelper.qDataTable(System.String)">
            
             <summary>
             查询数据返回一个表格
             </summary>
             <param name="sql"></param>
             <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.DBUtility.OleDbHelper.qDataRow(System.String)">
            <summary>
            查询数据返回一个表格
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.DBUtility.OleDbHelper.qDataSet(System.String)">
            <summary>
            查询数据返回一个表格
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.DBUtility.OleDbHelper.GetOneValue(System.String,System.Int32)">
            <summary>
            根据ID
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.DBUtility.OleDbHelper.GetOneValue(System.String)">
            <summary>
            查询单个直
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.DBUtility.OleDbHelper.GetOleDbConnection">
            <summary>
            获取数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.DBUtility.OleDbHelper.ExecSQL(System.String)">
            <summary>
            运行sql命令,返回改变的行数,
            </summary>
            <param name="sql">要运行的sql命令</param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.Src.Services.LoggingService.SqlLogger">
            <summary>
            预留
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.TextWriterLoggingService">
            <summary>
            LoggingService implementation that logs into a TextWriter.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.IMessageService">
            <summary>
            Description of IMessageService.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.IMessageService.ShowError(System.Exception,System.String)">
            <summary>
            Shows an error.
            If <paramref name="ex"/> is null, the message is shown inside
            a message box.
            Otherwise, the custom error reporter is used to display
            the exception error.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.IMessageService.ShowWarning(System.String)">
            <summary>
            Shows a warning message.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.IMessageService.AskQuestion(System.String,System.String)">
            <summary>
            Asks the user a Yes/No question, using "Yes" as the default button.
            Returns <c>true</c> if yes was clicked, <c>false</c> if no was clicked.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.IMessageService.ShowCustomDialog(System.String,System.String,System.Int32,System.Int32,System.String[])">
            <summary>
            Shows a custom dialog.
            </summary>
            <param name="caption">The title of the dialog.</param>
            <param name="dialogText">The description shown in the dialog.</param>
            <param name="acceptButtonIndex">
            The number of the button that is the default accept button.
            Use -1 if you don't want to have an accept button.
            </param>
            <param name="cancelButtonIndex">
            The number of the button that is the cancel button.
            Use -1 if you don't want to have a cancel button.
            </param>
            <param name="buttontexts">The captions of the buttons.</param>
            <returns>The number of the button that was clicked, or -1 if the dialog was closed  without clicking a button.</returns>
        </member>
        <member name="M:AgileFrame.Core.Services.IMessageService.InformSaveError(System.String,System.String,System.String,System.Exception)">
            <summary>
            Show a message informing the user about a save error.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.IMessageService.ChooseSaveError(System.String,System.String,System.String,System.Exception,System.Boolean)">
            <summary>
            Show a message informing the user about a save error,
            and allow him to retry/save under alternative name.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MessageService">
            <summary>
            Class with static methods to show message boxes.
            All text displayed using the MessageService is passed to the
            <see cref="T:AgileFrame.Core.StringParser"/> to replace ${res} markers.
            </summary>
        </member>
        <member name="F:AgileFrame.Core.MessageService.m_CustomErrorReporter">
            <summary>
            Gets/Sets the custom error reporter callback delegate.
            If this property is null, the default messagebox is used.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.ShowError(System.Exception)">
            <summary>
            Shows an exception error using the <see cref="P:AgileFrame.Core.MessageService.CustomErrorReporter"/>.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.ShowError(System.String)">
            <summary>
            Shows an error using a message box.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.ShowErrorFormatted(System.String,System.String[])">
            <summary>
            Shows an error using a message box.
            <paramref name="formatstring"/> is first passed through the
            <see cref="T:AgileFrame.Core.StringParser"/>,
            then through <see cref="M:System.String.Format(System.String,System.Object)"/>, using the formatitems as arguments.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.ShowError(System.Exception,System.String)">
            <summary>
            Shows an error.
            If <paramref name="ex"/> is null, the message is shown inside
            a message box.
            Otherwise, the custom error reporter is used to display
            the exception error.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.ShowWarning(System.String)">
            <summary>
            Shows a warning message.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.ShowWarningFormatted(System.String,System.String[])">
            <summary>
            Shows a warning message.
            <paramref name="formatstring"/> is first passed through the
            <see cref="T:AgileFrame.Core.StringParser"/>,
            then through <see cref="M:System.String.Format(System.String,System.Object)"/>, using the formatitems as arguments.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.AskQuestion(System.String,System.String)">
            <summary>
            Asks the user a Yes/No question, using "Yes" as the default button.
            Returns <c>true</c> if yes was clicked, <c>false</c> if no was clicked.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.AskQuestion(System.String)">
            <summary>
            Asks the user a Yes/No question, using "Yes" as the default button.
            Returns <c>true</c> if yes was clicked, <c>false</c> if no was clicked.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MessageService.ShowCustomDialog(System.String,System.String,System.Int32,System.Int32,System.String[])">
            <summary>
            Shows a custom dialog.
            </summary>
            <param name="caption">The title of the dialog.</param>
            <param name="dialogText">The description shown in the dialog.</param>
            <param name="acceptButtonIndex">
            The number of the button that is the default accept button.
            Use -1 if you don't want to have an accept button.
            </param>
            <param name="cancelButtonIndex">
            The number of the button that is the cancel button.
            Use -1 if you don't want to have a cancel button.
            </param>
            <param name="buttontexts">The captions of the buttons.</param>
            <returns>The number of the button that was clicked, or -1 if the dialog was closed  without clicking a button.</returns>
        </member>
        <member name="M:AgileFrame.Core.MessageService.ShowCustomDialog(System.String,System.String,System.String[])">
            <summary>
            Shows a custom dialog.
            </summary>
            <param name="caption">The title of the dialog.</param>
            <param name="dialogText">The description shown in the dialog.</param>
            <param name="buttontexts">The captions of the buttons.</param>
            <returns>The number of the button that was clicked.</returns>
        </member>
        <member name="P:AgileFrame.Core.MessageService.ProductName">
            <summary>
            Gets/Sets the name of the product using AgileFrame.Core.
            Is used by the string parser as replacement for ${ProductName}.
            </summary>
        </member>
        <member name="P:AgileFrame.Core.MessageService.DefaultMessageBoxTitle">
            <summary>
            Gets/Sets the default title for message boxes displayed
            by the message service.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.MessageService.ShowErrorDelegate">
            <summary>
            Delegate used for custom error callbacks.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.TextWriterMessageService">
            <summary>
            IMessageService implementation that writes messages to a text writer.
            User input is not implemented by this service.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.PassWordService">
            <summary>
            加密服务
            </summary>
        </member>
        <member name="M:AgileFrame.Core.PassWordService.encode_1(System.String)">
            <summary>
            方法一 (不可逆加密)
            </summary>
            <param name="PasswordString"></param>
            <param name="PasswordFormat"></param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.SecurityService">
            <summary>
            加密服务
            </summary>
        </member>
        <member name="M:AgileFrame.Core.SecurityService.EncryptDES(System.String,System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>
        </member>
        <member name="M:AgileFrame.Core.SecurityService.DecryptDES(System.String,System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串，失败返源串</returns>
        </member>
        <member name="T:AgileFrame.Core.CorePath">
            <summary>
            通过调试发现，FileOpenDialog 会改变该当前目录 Environment.CurrentDirectory 以及 Directory.GetCurrentDirectory() 的值。当用户通过 文件打开对话框 选取文件后，当前目录的值将变成用户所选择文件所在的目录。
            因此如果依赖该属性来定位某个固定的文件的位置，那么是要被 FileNotFoundException 之类的异常打扰D。如果需要始终定位到当前应用程序所在的位置，
            可以用 System.Windows.Forms.Application.StartupPath 来获取，
            当前也可以用 System.Reflection.Assembly.GetEntryAssembly().Location 来获取当前入口/主线程的所在集合文件的路径（包含文件名），
            如果只需要目录部分的字符串则可使用 System.IO.Path.GetDirectoryName() 来截取。
            System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName 获取模块的完整路径。== System.Windows.Forms.Application.ExecutablePath
            System.AppDomain.CurrentDomain.BaseDirectory 获取程序的基目录。
            System.AppDomain.CurrentDomain.SetupInformation.ApplicationBase  获取和设置包括该应用程序的目录的名称 == System.Windows.Forms.Application.StartupPath     /// 
            
            
            使用Assembly的时候，可能会遇到权限方面的问题，同时Assembly.GetCallingAssembly或者Assembly.GetExecutingAssembly有可能得到的不是.exe文件的位置。在GAC中的添加了强名的Assembly，运行时是可以不必与.exe在同一目录的。
            
            .NET的进程启动时，会创建AppDomain，所有的Assembly都被Load到某一个AppDomain中，而AppDomain中提供了SetupInformation属性，可以获取AppDomain启动时的一些信息，
            因此，可以通过调用AppDomain.CurrentDomain.SetupInformation.ApplicationBase获取当前应用程序所在的路径。
            在通过以上方法取到所需的目录后，可以调用System.IO.Path的方法获取文件名，目录名，绝对路径等。停止对路径字符串的分析，而改用System.IO.Path类吧。
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CorePath.RobotPath">
            <summary>
            //%APPDATA%           相当于   C:\Documents and Settings\用户目录\Application Data
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CorePath.ExecutingPath">
            <summary>
            cs系统执行目录、bs系统执行目录为同一个???
            </summary>
        </member>
        <member name="P:AgileFrame.Core.CorePath.WebPath">
            <summary>
            bs系统执行目录
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.PerformanceCountService.CodeMemory">
            <summary>
            c# 分析所有内容的内存检测
            获取对象所占用的内存 占用字节 所在引用到的对象必须是可序列化的。
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.PerformanceCountService.CodeMemory.count(System.Object)">
            <summary>
            1：序列化
            2：在生成该object的前后都调用java.lang.Runtime.freeMemory()方法，然后看两者之差即为该object消耗的内存量。
            3：先Runtime.getRuntime().gc();后生成对象，再Runtime.getRuntime().gc(); 最后计算两次之差来得到消耗的内存量。这种方法基本上正确
            </summary>
            <param name="ob"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.Services.PerformanceCountService.CodeMemory.w3wpCount">
            <summary>
            w3wp.exe是你用.net开发的站点在windows server2003 上运行时的进程
            只要有人访问的你站点，这个进程就会启动，访问量大他所占用的资源就会多，想减少他的占用量只能从你的程序入手，尽量减少如Session之类的东西。
            
            现象：最多的时候w3wp.exe 占用CPU 90% 而且一直都是在60%以上 
            
            可以考虑用system32\inetsrv\Microsoft.Web.Administrator.dll公开的接口来管理和监控IIS性能，这自然也包括w3wp.exe的行为。
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.PerformanceCountService.CodeMemory.SqlServerCount">
            <summary>
            旦凡是同时查询、插入及修改操作，有时会造成死锁，建议数据量大的单表分表处理，一般单表数据量要小于100万。
            另外索引建立应该慎重，因为在索引提高了查询的速度但是降低了插入和修改的速度。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ResourceNotFoundException">
            <summary>
            Is thrown when the GlobalResource manager can't find a requested
            resource.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.ResourceService">
            <summary>
            This Class contains two ResourceManagers, which handle string and image resources
            for the application. It do handle localization strings on this level.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.ResourceService.GetResource(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String}@)">
            <summary>
            获得资源
            </summary>
        </member>
        <member name="F:AgileFrame.Core.ResourceService.strings">
            <summary>English strings (list of resource managers)</summary>
        </member>
        <member name="F:AgileFrame.Core.ResourceService.icons">
            <summary>Neutral/English images (list of resource managers)</summary>
        </member>
        <member name="F:AgileFrame.Core.ResourceService.localStrings">
            <summary>Hashtable containing the local strings from the main application.</summary>
        </member>
        <member name="F:AgileFrame.Core.ResourceService.localStringsResMgrs">
            <summary>Strings resource managers for the current language</summary>
        </member>
        <member name="F:AgileFrame.Core.ResourceService.localIconsResMgrs">
            <summary>Image resource managers for the current language</summary>
        </member>
        <member name="F:AgileFrame.Core.ResourceService.resourceAssemblies">
            <summary>List of ResourceAssembly</summary>
        </member>
        <member name="M:AgileFrame.Core.ResourceService.RegisterStrings(System.String,System.Reflection.Assembly)">
            <summary>
            Registers string resources in the resource service.
            </summary>
            <param name="baseResourceName">The base name of the resource file embedded in the assembly.</param>
            <param name="assembly">The assembly which contains the resource file.</param>
            <example><c>ResourceService.RegisterStrings("TestAddin.Resources.StringResources", GetType().Assembly);</c></example>
        </member>
        <member name="M:AgileFrame.Core.ResourceService.RegisterImages(System.String,System.Reflection.Assembly)">
            <summary>
            Registers image resources in the resource service.
            </summary>
            <param name="baseResourceName">The base name of the resource file embedded in the assembly.</param>
            <param name="assembly">The assembly which contains the resource file.</param>
            <example><c>ResourceService.RegisterImages("TestAddin.Resources.BitmapResources", GetType().Assembly);</c></example>
        </member>
        <member name="M:AgileFrame.Core.ResourceService.GetString(System.String)">
            <summary>
            Returns a string from the resource database, it handles localization
            transparent for the user.
            </summary>
            <returns>
            The string in the (localized) resource database.
            </returns>
            <param name="name">
            The name of the requested resource.
            </param>
            <exception cref="T:AgileFrame.Core.ResourceNotFoundException">
            Is thrown when the GlobalResource manager can't find a requested resource.
            </exception>
        </member>
        <member name="T:AgileFrame.Core.Core.Services.ExceptionService.ServiceExpirationRuntimeException">
            <summary>
            http://www.ibm.com/developerworks/cn/websphere/library/techarticles/0705_fong/0705_fong.html
            指示异步 SCA 消息已过期。可以使用服务引用上的 RequestExpiration 或 ResponseExpiration 限定符设置过期时间。 
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Core.Services.ExceptionService.ServiceTimeoutRuntimeException">
            <summary>
            指示在指定的时间限制内不接收对异步请求的响应，该时间限制是在使用延迟响应异步通信模式时，在 invokeResponse() 调用过程中以编程方式设置的。 
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Core.Services.ExceptionService.ServiceUnavailableException">
            <summary>
            指示在通过导入调用外部服务组件时抛出异常。
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Core.Services.ExceptionService.ServiceUnwiredReferenceRuntimeException">
            <summary>
            指示组件上的服务引用连接不正确。 
            </summary>
        </member>
        <member name="T:AgileFrame.Core.Services.ServiceManager">
            <summary>
            Maintains references to the core service implementations.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.ServiceManager.#cctor">
            <summary>
            服务配置初始化定义  //实现默认配置
            </summary>
        </member>
        <member name="M:AgileFrame.Core.Services.ServiceManager.AddType(AgileFrame.Core.LoggingServiceType)">
            <summary>
            增加特定的类型日志
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:AgileFrame.Core.Services.ServiceManager.GetType(AgileFrame.Core.LoggingServiceType)">
            <summary>
            得到日志类型列表
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:AgileFrame.Core.Services.ServiceManager.RemoveType(AgileFrame.Core.LoggingServiceType)">
            <summary>
            删除特定的类型日志
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:AgileFrame.Core.Services.ServiceManager.IsEnforceAllServiceDebugger">
            <summary>
            设置所有service为调试版本。当在测试期的时候。需要让所有服务都进入可跟踪的调试期
            </summary>
        </member>
        <member name="T:AgileFrame.Core.StringParser">
            <summary>
            This class parses internal ${xyz} tags of #Develop.
            All environment variables are avaible under the name env.[NAME]
            where [NAME] represents the string under which it is avaiable in
            the environment.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringParser.Parse(System.String)">
            <summary>
            Expands ${xyz} style property values.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringParser.Parse(System.String[])">
            <summary>
            Parses an array and replaces the elements in the existing array.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringParser.Parse(System.String,System.String[0:,0:])">
            <summary>
            Expands ${xyz} style property values.
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringParser.GetProperty(System.String)">
            <summary>
            Allow special syntax to retrieve property values:
            ${property:PropertyName}
            ${property:PropertyName??DefaultValue}
            ${property:ContainerName/PropertyName}
            ${property:ContainerName/PropertyName??DefaultValue}
            A container is a Properties instance stored in the PropertyService. This is
            used by many AddIns to group all their properties into one container.
            </summary>
        </member>
        <member name="T:AgileFrame.Core.SendExceptionClickEventArgs">
            <summary>
            发送异常点击事件        ///通过参数判断重启次数
            </summary>
        </member>
        <member name="T:AgileFrame.Core.WinFormService">
            <summary>
            与winform程序相关的框架特性服务
            </summary>
        </member>
        <member name="T:AgileFrame.Core.WinFormService.BindDataGridViewService">
            <summary>
            开启绑定 DataGridView 相关的服务
            </summary>
        </member>
        <member name="T:AgileFrame.Core.WinFormService.OptionService">
            <summary>
            开启绑定 Option 多选项 相关的服务
            </summary>
        </member>
        <member name="M:AgileFrame.Core.MyConfigurationSettings.GetValue(System.String,System.String)">
            <summary>
            app.config 内的节点，以及用例描述，web与app配置都是有区别的。
            </summary>
            <param name="key">"conn"</param>
            <param name="bussinessStr"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.MyConfigurationSettings.ConvertType``1(System.Object,``0)">
            
            <summary>
            泛型数据类型转换
            </summary>
            <typeparam name="T">自定义数据类型</typeparam>
            <param name="value">传入需要转换的值</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.MyConfigurationSettings.ConvertToT``1(System.Object,``0)">
            
            <summary>
            转换数据类型
            </summary>
            <typeparam name="T">自定义数据类型</typeparam>
            <param name="myvalue">传入需要转换的值</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="T:AgileFrame.Core.PinyinHelper">
            <summary>
            汉字转拼音类
            </summary>
        </member>
        <member name="F:AgileFrame.Core.PinyinHelper.pyValue">
            <summary>
            定义拼音区编码数组
            </summary>
        </member>
        <member name="F:AgileFrame.Core.PinyinHelper.pyName">
            <summary>
            定义数组
            </summary>
        </member>
        <member name="M:AgileFrame.Core.PinyinHelper.Convert(System.String)">
            <summary>
            汉字转换
            </summary>
            <param name="hzString"></param>
            <returns></returns>
        </member>
        <member name="M:AgileFrame.Core.PinyinHelper.Convert(System.String,System.Int32)">
            <summary>
            把汉字转换成拼音(全拼)
            </summary>
            <param name="hzString">汉字字符串</param>
            <returns>转换后的拼音(全拼)字符串</returns>
        </member>
        <member name="T:AgileFrame.Core.StringService.StringFilterByDict">
            <summary>
            C#高效脏字过滤算法
            一篇文章只比较一次，遍历字符比较，匹配字典的办法。
            总共比较次数基本和字符数相同 而且不管词典多大 一旦构建这种数据结构就都不会影响过滤效率 
            比如:
            过滤字典: 你妈的-->nimade
            你妈的你太坏了-->nimade你太坏了
            </summary>
        </member>
        <member name="F:AgileFrame.Core.StringService.StringFilterByDict.dict">
            <summary>
            外部数组字典解析到这个内部数组里面
            </summary>
        </member>
        <member name="M:AgileFrame.Core.StringService.StringFilterByDict.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            输入要过滤的字符串 key value 数组
            </summary>
            <param name="ict"></param>
        </member>
        <member name="T:AgileFrame.Core.StringService.CharNode">
            <summary>
            保存字符，与字符所在的位置
            </summary>
        </member>
    </members>
</doc>
