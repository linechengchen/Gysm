using AgileFrame.Core;
using AgileFrame.Orm.PersistenceLayer.BLL.Base;
using AgileFrame.Orm.PersistenceLayer.Model;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class wap_main_query : BasePageShuati
{
    protected string sc = "";
    public string title1 = "未加载";
    public string kemuId = "";
    public string readType = "1";
    public int top = 50;
    public string leimu = "";
    public string openId = "";
    public string user_id = "";
    public string deviceId = "";
    private void setTitle()
    {
        if (!string.IsNullOrEmpty(Request["leimu"]))
        {
            leimu = Convert.ToString(Request["leimu"]);
        }
        if (!string.IsNullOrEmpty(Request["sc"]))
        {
            sc = ScHelper.getSc(this);
        }
        if (!string.IsNullOrEmpty(Request["OpenId"]))
        {
            openId = Convert.ToString(Request["OpenId"]);
        }
        if (!string.IsNullOrEmpty(Request["deviceId"]))
        {
            deviceId = Convert.ToString(Request["deviceId"]);
        }
        if (!string.IsNullOrEmpty(Request["user_id"]))
        {
            user_id = Convert.ToString(Request["user_id"]);
        }
        if (!string.IsNullOrEmpty(Request["openId"]))
        {
            openId = Convert.ToString(Request["openId"]);
        }
        if (!string.IsNullOrEmpty(Request["kemuId"]))
        {
            kemuId = Request["kemuId"].ToString();
        }
        if (!string.IsNullOrEmpty(Request["top"]))
        {
            top = Convert.ToInt32(Request["top"].ToString());
        }
    }
    string num = "1";
    public string type = "sequence";//顺序出题
    public string seq = "1";
    protected string jump_num = "";
    public string LastSeq = "";
    public string errorids = "";

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!string.IsNullOrEmpty(Request["errorids"]))
        {
            errorids = Convert.ToString(Request["errorids"]);
        }

        if (!string.IsNullOrEmpty(jump_num))
        {
            seq = jump_num;
        }
        AFDictionary<string, int> dic1 = new AFDictionary<string, int>();


        RootObject root1 = new RootObject(MyDebugger.IsAttached);
        root1.Add(timuList);

        string json1 = root1.ToJson();
        Response.Write(json1);
        return;
    }
}